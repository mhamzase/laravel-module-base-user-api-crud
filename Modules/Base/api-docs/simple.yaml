openapi: 3.0.0
info:
  title: White Falcon Modules API
  version: 1.1.0
  description: This is set of APIs for interacting with white falcon modules.
paths:
  # Base module
  /terms:
    summary: All basic calls to main object URL
#    get:
#      summary: Get List of all terms
#      description: ''
#      operationId: termsList
#      tags:
#        - Base
#      parameters:
#        - $ref: '#/components/parameters/pageParam'
#        - $ref: '#/components/parameters/limitParam'
#        - $ref: '#/components/parameters/sortParam'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                allOf:
#                  - $ref: '#/components/schemas/ResponsePaginate'
#                  - type: object
#                    properties:
#                      data:
#                        $ref: '#/components/schemas/Term'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'

    post:
      summary: Create New Term
      description: ''
      operationId: termCreate
      tags:
        - Base
      requestBody:
        $ref: '#/components/requestBodies/TermForm'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Term'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnepectedError'

#  '/terms/{term}':
#    summary: Operations related to a single term
#    parameters:
#      - in: path
#        name: term
#        schema:
#          type: string
#        required: true
#        description: Numeric ID or slug of the term to get
#    get:
#      summary: Get An individual term
#      description: ''
#      operationId: termGet
#      tags:
#        - Base
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  data:
#                    $ref: '#/components/schemas/Term'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#    patch:
#      summary: Update an individual term
#      description: ''
#      operationId: termUpdate
#      tags:
#        - Base
#      requestBody:
#        $ref: '#/components/requestBodies/TermForm'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  data:
#                    $ref: '#/components/schemas/Term'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#    delete:
#      summary: Delete an individual term
#      description: ''
#      operationId: termDelete
#      tags:
#        - Base
#      responses:
#        '200':
#          $ref: '#/components/responses/ObjectDeleted'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'

#  '/terms/{term}/children':
#    summary: Retreive list of children associated with the term
#    parameters:
#      - in: path
#        name: term
#        schema:
#          type: string
#        required: true
#        description: Numeric ID or slug of the term to get
#      - $ref: '#/components/parameters/pageParam'
#      - $ref: '#/components/parameters/limitParam'
#      - $ref: '#/components/parameters/sortParam'
#
#    get:
#      summary: Get list of children for an individual terms
#      description: ''
#      operationId: termChildren
#      tags:
#        - Base
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  data:
#                    $ref: '#/components/schemas/Term'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'


#  /translations:
#    summary: Manage language translations under this path
#    get:
#      summary: Get list of all phrase using pagination
#      description: ''
#      operationId: translationsList
#      tags:
#        - Base
#      parameters:
#        - $ref: '#/components/parameters/pageParam'
#        - $ref: '#/components/parameters/limitParam'
#        - $ref: '#/components/parameters/sortParam'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                allOf:
#                  - $ref: '#/components/schemas/ResponsePaginate'
#                  - type: object
#                    properties:
#                      data:
#                        type: array
#                        items:
#                          $ref: '#/components/schemas/Phrase'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#    post:
#      summary: Create New Phrase
#      description: ''
#      operationId: phraseCreate
#      tags:
#        - Base
#      requestBody:
#        $ref: '#/components/requestBodies/PhraseForm'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  data:
#                    $ref: '#/components/schemas/Phrase'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#  '/translations/{phrase}':
#    summary: Operations related to a single phrase
#    parameters:
#      - in: path
#        name: phrase
#        schema:
#          type: string
#        required: true
#        description: Numeric ID or slug of the phrase to get
#    get:
#      summary: Get An individual phrase
#      description: ''
#      operationId: phraseGet
#      tags:
#        - Base
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  data:
#                    $ref: '#/components/schemas/Phrase'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#    patch:
#      summary: Update an individual phrase
#      description: ''
#      operationId: phraseUdate
#      tags:
#        - Base
#      requestBody:
#        $ref: '#/components/requestBodies/PhraseForm'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  data:
#                    $ref: '#/components/schemas/Phrase'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#    delete:
#      summary: Delete an individual term
#      description: ''
#      operationId: phraseDelete
#      tags:
#        - Base
#      responses:
#        '200':
#          $ref: '#/components/responses/ObjectDeleted'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'
#
#  '/public/trans/{language}/{category-slug}':
#    summary: Operations related to a single phrase
#    parameters:
#      - in: path
#        name: language
#        schema:
#          type: string
#        required: true
#        description: 2 character iso code for language
#      - in: path
#        name: 'category-slug'
#        schema:
#          type: string
#        required: true
#        description: Optional Slug of category for which phrases needs to be retreived
#    get:
#      summary: Get set of translations with targetting category as an option
#      description: ''
#      operationId: transGet
#      tags:
#        - Base
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                properties:
#                  slug:
#                    type: string
#                    description: The slug of phrase
#                    example: Translation String
#
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '5XX':
#          $ref: '#/components/responses/UnepectedError'

components:
  parameters:
    pageParam:
      name: page
      in: query
      description: Current page number that needs to be rendered
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limitParam:
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
    sortParam:
      name: sort
      in: query
      description: Explain the sorting mechnism for the API
      required: false
      schema:
        type: string

  requestBodies:
    ClassifiedTermForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ClassifiedTerm'

    TermForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Term'

    PhraseForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Phrase'
    PersonForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Person'
    CompanyForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Company'
    BranchForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Branch'
    AddressForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Address'

    UserForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/User'
    RoleForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Role'
    PermissionForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Permission'
    NotificationForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Notification'
    EmailNotificationForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmailNotification'
    SmsNotificationForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SmsNotification'
    PushNotificationForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PushNotification'

    ProductForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Product'

    OrderForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Order'

    PageForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Page'

    MenuForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Menu'

    CartShipmentForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CartShipment'

    RecurringProfileForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RecurringProfile'

    InvoiceForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Invoice'

    PaymentRecordForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PaymentRecord'

    ClassifiedForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Classified'

    ClassifiedDefinitionForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ClassifiedDefinition'

    ClassifiedDefinitionFieldForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ClassifiedDefinitionField'

    ModerationForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Moderation'

    FormFieldsForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/FormFields'

    StoreForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Store'

    ShippingMethodForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ShippingMethod'

    ShippingZoneForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ShippingZone'

    ServiceForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Service'

    ServiceOrderForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ServiceOrder'

    QuoteForm:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Quote'

  responses:
    SuccessfulRequest:
      description: A success message on processing a request
#      content:
#        application/json:
#          schema:
#            $ref: '#/components/schemas/Error'
    NotFound:
      description: A user with the specified ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnepectedError:
      description: Unexpected error.
      content:
        application/json:
          schema:
#            $ref: '#/components/schemas/Error'
            type: object
            properties:
              message:
                type: string
    ObjectDeleted:
      description: Requested Item has been deleted successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string

  schemas:
    Term:
      type: object
      properties:
        title:
          type: string
        slug:
          type: string
        parent_id:
          type: string
        extra:
          type: array
          items: { }
        module_name:
          type: string
      required:
        - title
        - slug

      example:
        - title: Gender
          slug: gender
          parent_id: 0
          extra: { }
          module_name: base

    ClassifiedTerm:
      allOf:
        - $ref: '#/components/schemas/Term'
        - type: object
          properties:
            attribute_categories:
              type: array
              items:
                type: integer
          example:
            - attribute_categories: [ 5, 6 ]
    Phrase:
      type: object
      properties:
        phrase:
          type: string
        slug:
          type: string
        lang:
          type: string
        module_name:
          type: string
        unstable:
          type: boolean
        locked:
          type: boolean
      required:
        - phrase
        - slug
        - lang

      example:
        - phrase: 'Hello World'
          slug: 'hello.word'
          lang: en
          module_name: base
          unstable: false
          locked: true

    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        lang:
          type: string
        email:
          type: string
        permissions:
          type: array
          items: { }
        roles:
          type: array
          items: { }
      required:
        - username
        - password
        - email

      example:
        - username: 'john'
          password: 'testing123'
          lang: en
          email: abc@testing.com
          permissions: [ create.user, create.person ]
          roles: [ admin ]

    Role:
      type: object
      properties:
        name:
          type: string
        guard_name:
          type: string
        permissions:
          type: array
          items: { }
      required:
        - name
        - guard_name
      example:
        - name: 'admin'
          guard_name: 'testing123'
          permissions: [ 1,5,10 ]

    Permission:
      type: object
      properties:
        name:
          type: string
        guard_name:
          type: string
      required:
        - name
        - guard_name
      example:
        - name: 'create.user'
          guard_name: '*'

    Person:
      allOf:
        - type: object
          properties:
            title:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            middlename:
              type: string
            email:
              type: string
            gender_id:
              type: integer
            phone1:
              type: string
            phone2:
              type: string
          required:
            - title
            - first_name
            - last_name
            - email
          example:
            - title: 'mr'
              first_name: 'John'
              last_name: Smith
              middlename: Allien
              email: 'john@test.com'
              gender_id: 5
              phone1: 234234234
              phone2: 234234234
        - $ref: '#/components/schemas/Media'

    Company:
      allOf:
        - type: object
          properties:
            name:
              type: string
            phone1:
              type: string
            phone2:
              type: string
            address:
              $ref: '#/components/schemas/Address'
          required:
            - name
          example:
            - name: 'A big Compan LT'
              phone1: 23432432
              phone2: 234234234
        - $ref: '#/components/schemas/Media'

    Branch:
      type: object
      properties:
        name:
          type: string
        phone1:
          type: string
        phone2:
          type: string
        company_id:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
        - name
        - company_id
      example:
        - name: 'A big Compan LT'
          phone1: 23432432
          phone2: 234234234
          company_id: 5

    Address:
      type: object
      properties:
        addr1:
          type: string
        addr2:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        lat:
          type: string
        lng:
          type: string
      required:
        - addr1
        - city
        - zip_code
        - country
      example:
        - addr1: 'Apr 4, Floo3'
          addr2: 'White hall road'
          city: 'Sialkot'
          state: Punjab
          zip_code: 51310
          country: PK
          lat: 23.00
          lng: 32.23

    Notification:
      type: object
      properties:
        hook:
          type: string
        slug:
          type: string
        lang:
          type: string
      required:
        - hook
      example:
        - hook: 'user.created'
          slug: 'user.created'
          lang: 'es'

    EmailNotification:
      allOf:
        - type: object
          properties:
            subject:
              type: string
            html_body:
              type: string
            text_body:
              type: string
          required:
            - subject
            - html_body
          example:
            - subject: 'Welcome to WF'
              html_body: '<b>Hello friend</b>, You are now registered'
              text_body: 'Hello Friend, you are now registerd'
        - $ref: '#/components/schemas/Notification'

    PushNotification:
      allOf:
        - type: object
          properties:
            subject:
              type: string
            body:
              type: string
          required:
            - subject
            - body
          example:
            - subject: 'Item Deleted'
              body: 'The desired item is deleted'
        - $ref: '#/components/schemas/Notification'

    SmsNotification:
      allOf:
        - type: object
          properties:
            body:
              type: string
          required:
            - body
          example:
            - body: 'Please check the package now'
        - $ref: '#/components/schemas/Notification'

    Product:
      allOf:
        - $ref: '#/components/schemas/TransTitle'
        - type: object
          properties:
            short_description:
              type: string
            category_id:
              type: integer
            type_id:
              type: integer
            sku:
              type: string
            extra:
              type: array
              items:
                type: object
          example:
            - category_id: 'Please check the package now'
              short_description: anything short
              type_id: 3
              sku: 35542340135323
              extra: [ ]
          required:
            - category_id
            - type_id
            - sku
        - $ref: '#/components/schemas/ProductPricing'
        - $ref: '#/components/schemas/Media'

    ProductPricing:
      type: object
      properties:
        original:
          type: number
        current:
          type: number
        cost:
          type: number
        currency:
          type: string
      required:
        - original
      example:
        - original: 20
          current: 15
          cost: 12
          currency: usd

    CartOrder:
      type: object
      properties:
        total_amount:
          type: number
        total_items:
          type: integer
        user_id:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderedItems'
      example:
        - total_amount: 200
          total_items: 15
          user_id: 3
          products: [ ]

    OrderedItems:
      type: object
      properties:
        product_id:
          type: integer
        qty:
          type: integer

    Order:
      allOf:
        - $ref: '#/components/schemas/CartOrder'
        - type: object
          properties:
            status_id:
              type: integer

    Page:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        slug:
          type: integer
        lang:
          type: string
        status_id:
          type: integer
        extra:
          type: array
          items:
            type: string
      required:
        - title
        - body
        - slug

    Menu:
      allOf:
        - $ref: '#/components/schemas/Term'
        - type: object
          properties:
            Items:
              type: array
              items:
                $ref: '#/components/schemas/MenuItem'

    CartShipment:
      allOf:
        - type: object
          properties:
            ship_addr:
              $ref: '#/components/schemas/Address'
            ship_id:
              type: integer
            billing_addr:
              $ref: '#/components/schemas/Address'
            billing_id:
              type: integer
            customer:
              $ref: '#/components/schemas/Person'
            customer_id:
              type: integer
            shipment_method:
              type: integer

    CartReview:
      allOf:
        - type: object
          properties:
            ship_addr:
              $ref: '#/components/schemas/Address'
            billing_addr:
              $ref: '#/components/schemas/Address'
            customer:
              $ref: '#/components/schemas/Person'
            shipment_method:
              type: object
              properties:
                title:
                  type: string
                slug:
                  type: string
            products:
              type: array
              items:
                $ref: '#/components/schemas/CartProduct'
            totals:
              type: object
              properties:
                sub_total:
                  type: number
                tax:
                  type: number
                discount:
                  type: number
                shiping:
                  type: number
                total:
                  type: number

    CartProduct:
      type: object
      properties:
        product_id:
          type: integer
        sku:
          type: string
        qty:
          type: integer
        title:
          type: string
        total_price:
          type: number
        pricing:
          type: object
          properties:
            original:
              type: number
            current:
              type: number
            currency:
              type: number
        attributes:
          type: object
          properties:
            title:
              type: string
            slug:
              type: string
            value:
              type: string
        media:
          type: object
          properties:
            title:
              type: string
            url:
              type: string

    MenuItem:
      type: object
      properties:
        title:
          type: string
        link_type:
          type: string
        link_value:
          type: string
        parent_id:
          type: integer
        class_name:
          type: string
        condition:
          type: string
        extra:
          type: array
          items:
            type: string
        menu_id:
          type: integer
      required:
        - title
        - menu_id

    RecurringProfile:
      allOf:
        - $ref: '#/components/schemas/Invoice'
        - type: object
          properties:
            duration_unit:
              type: integer
            duration_value:
              type: integer
            repetition_times:
              type: integer


    Invoice:
      allOf:
        - $ref: '#/components/schemas/QuoteAndInvoice'
        - type: object
          properties:
            tax_amount:
              type: number
            method_id:
              type: integer
          required:
            - method_id

    QuoteAndInvoice:
      type: object
      properties:
        model_name:
          type: string
        model_id:
          type: integer
        identifier:
          type: string
        person_id:
          type: integer
        currency:
          type: string
        base_amount:
          type: number
        discount_amount:
          type: number
        total_amount:
          type: number
        status_id:
          type: integer
        is_company:
          type: boolean
      required:
        - base_amount
        - status_id

    PaymentRecord:
      type: object
      properties:
        currency:
          type: string
        amount:
          type: number
        type_id:
          type: integer
        status_id:
          type: integer
        extra:
          type: object
        method_id:
          type: integer
      required:
        - amount
        - type_id
        - status_id
        - method_id

    Classified:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category_id:
          type: integer
        show_phone:
          type: integer
        show_email:
          type: integer
        allow_chat:
          type: integer
        customer_id:
          type: integer
        status_id:
          type: integer
        calL_price:
          type: integer
        currency:
          type: string
        price:
          type: number
        tags:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            type: object

      required:
        - title
        - category_id
        - show_phone
        - show_email
        - allow_chat
        - customer_id
        - status_id
        - currency
        - price

    ClassifiedDefinition:
      type: object
      properties:
        title:
          type: string
        status:
          type: string
        categories:
          type: array
          items:
            type: integer
      required:
        - title
        - categories
      example:
        - title:  Iphone 7
          categories: [1,6,8]

    ClassifiedDefinitionField:
      type: object
      properties:
        field_id:
          type: integer
        options:
          type: array
          items:
            type: integer
      required:
        - field_id
        - options
      example:
        - field_id: 6
          options:  [3,6,3]

    Moderation:
      type: object
      properties:
        type:
          type: string
        status_id:
          type: integer
        original:
          type: object
        logs:
          type: array
          items:
            type: object
            properties:
              details:
                type: object
              extra:
                type: object

    FormFields:
      allOf:
        - $ref: '#/components/schemas/TransTitle'
        - type: object
          properties:
            help:
              type: string
            type_id:
              type: integer
            category_id:
              type: integer
            is_required:
              type: boolean
            is_unique:
              type: boolean
            validate_type_id:
              type: integer
            validate_extra:
              type: object
            options:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: string
                  title:
                    type: string
          example:
            - help: You can provide color
              type_id: 1
              category_id: 4
              is_required: false
              is_unique: true
              validate_type_id: 3

    Media:
      type: object
      properties:
        media:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              file:
                type: string

    Store:
      allOf:
        - $ref: '#/components/schemas/TransTitle'
        - type: object
          properties:
            slug:
              type: string
            owner:
              type: integer
            status_id:
              type: integer
            extra:
              type: array
              items:
                type: string
          required:
            - slug
            - owner
          example:
            - slug: dummy-store
              owner:  5
              status: 1
              extra:  {}

        - $ref: '#/components/schemas/Media'

    ShippingMethod:
      allOf:
        - $ref: '#/components/schemas/TransTitle'
        - type: object
          properties:
            title:
              type: string
            description:
              type: string
            slug:
              type: string
            rate_by:
              type: integer
              description: This will decide weather its rate is fixed, product wise or zone wise
            currency:
              type: string
            status_id:
              type: string
          required:
            - title
            - slug
            - rate_by
            - currency
          example:
            - slug: fedex
              rate_by:  3
              currency: usd
              status_id:  7

    ShippingZone:
      type: object
      properties:
        title:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        methods:
          type: array
          items:
            type: integer
      required:
        - title
        - country
      example:
        - title:  Newyork
          city: newyork
          state:  newyork
          zip:  35840
          country:  us
          methods:  {1,3,4}

    Service:
      allOf:
        - $ref: '#/components/schemas/TransTitle'
        - type: object
          properties:
            category_id:
              type: integer
            currency:
              type: string
            original:
              type: number
            current:
              type: number
            price_unit:
              type: integer
              description: Fixed, Hourly, Daily, Weekly, Monthly, Per Visit
            is_recurring:
              type: boolean
          required:
            - category_id
            - original
            - price_unit
          example:
            - category_id:  5
              currency: usd
              original: 34.23
              current:  30.00
              price_unit: 5
              is_recurring: false

    ServiceOrder:
      type: object
      properties:
        currency:
          type: string
        base_amount:
          type: number
        discount:
          type: number
        status_id:
          type: integer
        customer:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderItem'
      required:
        - currency
        - base_amount
        - customer
        - items

      example:
        - currency: usd
          base_amount:  23.34
          customer: 5

    ServiceOrderItem:
      type: object
      properties:
        service_id:
          type: string
        unit_price:
          type: number
        qty:
          type: integer
        discount:
          type: number
      required:
        - service_id
        - unit_price
      example:
        - service_id: 3
          unit_price: 50.23
          qty:  3
          discount: 23.53

    Quote:
      allOf:
        - $ref: '#/components/schemas/QuoteAndInvoice'
        - type: object
          properties:
            items:
              $ref: '#/components/schemas/QuoteItem'

    QuoteItem:
      type: object
      properties:
        quote_type:
          type: string
        quote_id:
          type: integer
        unit_price:
          type: number
        qty:
          type: integer
        discount:
          type: number
      required:
        - quote_type
        - quote_id
        - unit_price
      example:
        - quote_type: invoice
          quote_id: 10
          unit_price: 53.32
          qty:  5
          discount: 10.2

    TransTitle:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        lang:
          type: string
      required:
        - title
      example:
        - title:  Some Title
          description:  Write something to describe
          lang: en

    ResponseMeta:
      type: object
      properties:
        current_page:
          type: integer
        from:
          type: integer
        last_page:
          type: integer
        path:
          type: string
        per_page:
          type: integer
        to:
          type: integer

    ResponseLinks:
      type: object
      properties:
        first:
          type: integer
        last:
          type: integer
        prev:
          type: integer
        next:
          type: integer

    ResponsePaginate:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        links:
          $ref: '#/components/schemas/ResponseLinks'

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        exception:
          type: string
        file:
          type: string
        trace:
          type: array
          items:
            type: object
      required:
        - code
        - message

  links:
    GetTermById: # <----- The $ref's above point here
      description: >
        The `id` value returned in the response can be used as
        the `userId` parameter in `GET /terms/{term}`.
      operationId: termGet
      parameters:
        userId: '$response.data#/id'

# Added by API Auto Mocking Plugin
servers:
  - url: '{protocol}://{host}/api/v1'
    description: White falcon's live Laravel test URL
    variables:
      host:
        default: whf.gotomy.dev
      protocol:
        enum:
          - http
          - https
        default: https
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/EvenLogics/white-falcon/1.0.0
tags:
  - name: Base
    description: All Items for Base module will fall under this section
  - name: User
    description: Users and authentication related operations are part of this moudle
  - name: Entity
    description: Entity module is dealing with people, addresses and companies
  - name: Notification
    description: This module is responsible for any kind of communication within or outside the system. E.g Email, SMS, push notifications etc
  - name: Ecommerce
    description: The responsibillity of this module is to offer eCommerce capabillity in our ecosystem
  - name: Product
    description: This module can be used individually or as part of eCommerce module system.
  - name: Cms
    description: This module will be responsbile for providing all functionality related to the pages and general CMS
  - name: Customer
    description: This module is responsible for managing everything related to a customer
  - name: Payment
    description: A module responsible for managing everything related to the payments
  - name: Classified
    description: A module for creating and managing classified ads
  - name: Moderation
    description: This module is going to manage all moderations in the system
  - name: ProductAttributes
    description: This module is an extension for products to avail form generator's functionality
  - name: Multistore
    description: Multistore module is an extension of eCommerce and this will allow to have multivendor or multistore concept introduced
  - name: Shipping
    description: All shipping matters of the system should be managed through this module
