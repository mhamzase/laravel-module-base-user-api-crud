{
  "components": {
    "parameters": {
      "limitParam": {
        "description": "Maximum number of items to return.",
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "default": 20,
          "format": "int32",
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        }
      },
      "pageParam": {
        "description": "Current page number that needs to be rendered",
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "default": 0,
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        }
      },
      "sortParam": {
        "description": "Explain the sorting mechnism for the API",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "AddressForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "addr1": "Apr 4, Floo3",
                  "addr2": "White hall road",
                  "city": "Sialkot",
                  "country": "PK",
                  "lat": 23,
                  "lng": 32.23,
                  "state": "Punjab",
                  "zip_code": 51310
                }
              ],
              "properties": {
                "addr1": {
                  "type": "string"
                },
                "addr2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "lat": {
                  "type": "string"
                },
                "lng": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "addr1",
                "city",
                "zip_code",
                "country"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "BranchForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "company_id": 5,
                  "name": "A big Compan LT",
                  "phone1": 23432432,
                  "phone2": 234234234
                }
              ],
              "properties": {
                "address": {
                  "example": [
                    {
                      "addr1": "Apr 4, Floo3",
                      "addr2": "White hall road",
                      "city": "Sialkot",
                      "country": "PK",
                      "lat": 23,
                      "lng": 32.23,
                      "state": "Punjab",
                      "zip_code": 51310
                    }
                  ],
                  "properties": {
                    "addr1": {
                      "type": "string"
                    },
                    "addr2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "lat": {
                      "type": "string"
                    },
                    "lng": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "addr1",
                    "city",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "company_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phone1": {
                  "type": "string"
                },
                "phone2": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "company_id"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "CartShipmentForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "billing_addr": {
                      "example": [
                        {
                          "addr1": "Apr 4, Floo3",
                          "addr2": "White hall road",
                          "city": "Sialkot",
                          "country": "PK",
                          "lat": 23,
                          "lng": 32.23,
                          "state": "Punjab",
                          "zip_code": 51310
                        }
                      ],
                      "properties": {
                        "addr1": {
                          "type": "string"
                        },
                        "addr2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "lat": {
                          "type": "string"
                        },
                        "lng": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "addr1",
                        "city",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "billing_id": {
                      "type": "integer"
                    },
                    "customer": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "customer_id": {
                      "type": "integer"
                    },
                    "ship_addr": {
                      "example": [
                        {
                          "addr1": "Apr 4, Floo3",
                          "addr2": "White hall road",
                          "city": "Sialkot",
                          "country": "PK",
                          "lat": 23,
                          "lng": 32.23,
                          "state": "Punjab",
                          "zip_code": 51310
                        }
                      ],
                      "properties": {
                        "addr1": {
                          "type": "string"
                        },
                        "addr2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "lat": {
                          "type": "string"
                        },
                        "lng": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "addr1",
                        "city",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "ship_id": {
                      "type": "integer"
                    },
                    "shipment_method": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "ClassifiedDefinitionFieldForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "field_id": 6,
                  "options": [
                    3,
                    6,
                    3
                  ]
                }
              ],
              "properties": {
                "field_id": {
                  "type": "integer"
                },
                "options": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "field_id",
                "options"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "ClassifiedDefinitionForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "categories": [
                    1,
                    6,
                    8
                  ],
                  "title": "Iphone 7"
                }
              ],
              "properties": {
                "categories": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "status": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "categories"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "ClassifiedForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "properties": {
                "allow_chat": {
                  "type": "integer"
                },
                "attributes": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "calL_price": {
                  "type": "integer"
                },
                "category_id": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "show_email": {
                  "type": "integer"
                },
                "show_phone": {
                  "type": "integer"
                },
                "status_id": {
                  "type": "integer"
                },
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "category_id",
                "show_phone",
                "show_email",
                "allow_chat",
                "customer_id",
                "status_id",
                "currency",
                "price"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "ClassifiedTermForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "extra": {},
                      "module_name": "base",
                      "parent_id": 0,
                      "slug": "gender",
                      "title": "Gender"
                    }
                  ],
                  "properties": {
                    "extra": {
                      "items": {},
                      "type": "array"
                    },
                    "module_name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "slug"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "attribute_categories": [
                        5,
                        6
                      ]
                    }
                  ],
                  "properties": {
                    "attribute_categories": {
                      "items": {
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "CompanyForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "name": "A big Compan LT",
                      "phone1": 23432432,
                      "phone2": 234234234
                    }
                  ],
                  "properties": {
                    "address": {
                      "example": [
                        {
                          "addr1": "Apr 4, Floo3",
                          "addr2": "White hall road",
                          "city": "Sialkot",
                          "country": "PK",
                          "lat": 23,
                          "lng": 32.23,
                          "state": "Punjab",
                          "zip_code": 51310
                        }
                      ],
                      "properties": {
                        "addr1": {
                          "type": "string"
                        },
                        "addr2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "lat": {
                          "type": "string"
                        },
                        "lng": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "addr1",
                        "city",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "phone1": {
                      "type": "string"
                    },
                    "phone2": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "media": {
                      "items": {
                        "properties": {
                          "file": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "EmailNotificationForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "html_body": "<b>Hello friend</b>, You are now registered",
                      "subject": "Welcome to WF",
                      "text_body": "Hello Friend, you are now registerd"
                    }
                  ],
                  "properties": {
                    "html_body": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "text_body": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "subject",
                    "html_body"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "hook": "user.created",
                      "lang": "es",
                      "slug": "user.created"
                    }
                  ],
                  "properties": {
                    "hook": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hook"
                  ],
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "FormFieldsForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "description": "Write something to describe",
                      "lang": "en",
                      "title": "Some Title"
                    }
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "category_id": 4,
                      "help": "You can provide color",
                      "is_required": false,
                      "is_unique": true,
                      "type_id": 1,
                      "validate_type_id": 3
                    }
                  ],
                  "properties": {
                    "category_id": {
                      "type": "integer"
                    },
                    "help": {
                      "type": "string"
                    },
                    "is_required": {
                      "type": "boolean"
                    },
                    "is_unique": {
                      "type": "boolean"
                    },
                    "options": {
                      "items": {
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type_id": {
                      "type": "integer"
                    },
                    "validate_extra": {
                      "type": "object"
                    },
                    "validate_type_id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "InvoiceForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "base_amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "discount_amount": {
                      "type": "number"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "is_company": {
                      "type": "boolean"
                    },
                    "model_id": {
                      "type": "integer"
                    },
                    "model_name": {
                      "type": "string"
                    },
                    "person_id": {
                      "type": "integer"
                    },
                    "status_id": {
                      "type": "integer"
                    },
                    "total_amount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "base_amount",
                    "status_id"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "method_id": {
                      "type": "integer"
                    },
                    "tax_amount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "method_id"
                  ],
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "MenuForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "extra": {},
                      "module_name": "base",
                      "parent_id": 0,
                      "slug": "gender",
                      "title": "Gender"
                    }
                  ],
                  "properties": {
                    "extra": {
                      "items": {},
                      "type": "array"
                    },
                    "module_name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "slug"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "Items": {
                      "items": {
                        "properties": {
                          "class_name": {
                            "type": "string"
                          },
                          "condition": {
                            "type": "string"
                          },
                          "extra": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "link_type": {
                            "type": "string"
                          },
                          "link_value": {
                            "type": "string"
                          },
                          "menu_id": {
                            "type": "integer"
                          },
                          "parent_id": {
                            "type": "integer"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "menu_id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "ModerationForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "properties": {
                "logs": {
                  "items": {
                    "properties": {
                      "details": {
                        "type": "object"
                      },
                      "extra": {
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "original": {
                  "type": "object"
                },
                "status_id": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "required": true
      },
      "NotificationForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "hook": "user.created",
                  "lang": "es",
                  "slug": "user.created"
                }
              ],
              "properties": {
                "hook": {
                  "type": "string"
                },
                "lang": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "hook"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "OrderForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "products": [],
                      "total_amount": 200,
                      "total_items": 15,
                      "user_id": 3
                    }
                  ],
                  "properties": {
                    "products": {
                      "items": {
                        "properties": {
                          "product_id": {
                            "type": "integer"
                          },
                          "qty": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_amount": {
                      "type": "number"
                    },
                    "total_items": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "status_id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "PageForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                },
                "extra": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "lang": {
                  "type": "string"
                },
                "slug": {
                  "type": "integer"
                },
                "status_id": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "body",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "PaymentRecordForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "properties": {
                "amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "extra": {
                  "type": "object"
                },
                "method_id": {
                  "type": "integer"
                },
                "status_id": {
                  "type": "integer"
                },
                "type_id": {
                  "type": "integer"
                }
              },
              "required": [
                "amount",
                "type_id",
                "status_id",
                "method_id"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "PermissionForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "guard_name": "*",
                  "name": "create.user"
                }
              ],
              "properties": {
                "guard_name": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "guard_name"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "PersonForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "email": "john@test.com",
                      "first_name": "John",
                      "gender_id": 5,
                      "last_name": "Smith",
                      "middlename": "Allien",
                      "phone1": 234234234,
                      "phone2": 234234234,
                      "title": "mr"
                    }
                  ],
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "gender_id": {
                      "type": "integer"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "middlename": {
                      "type": "string"
                    },
                    "phone1": {
                      "type": "string"
                    },
                    "phone2": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "first_name",
                    "last_name",
                    "email"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "media": {
                      "items": {
                        "properties": {
                          "file": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "PhraseForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "lang": "en",
                  "locked": true,
                  "module_name": "base",
                  "phrase": "Hello World",
                  "slug": "hello.word",
                  "unstable": false
                }
              ],
              "properties": {
                "lang": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "module_name": {
                  "type": "string"
                },
                "phrase": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "unstable": {
                  "type": "boolean"
                }
              },
              "required": [
                "phrase",
                "slug",
                "lang"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "ProductForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "description": "Write something to describe",
                      "lang": "en",
                      "title": "Some Title"
                    }
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "category_id": "Please check the package now",
                      "extra": [],
                      "short_description": "anything short",
                      "sku": 35542340135323,
                      "type_id": 3
                    }
                  ],
                  "properties": {
                    "category_id": {
                      "type": "integer"
                    },
                    "extra": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "short_description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "type_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "category_id",
                    "type_id",
                    "sku"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "cost": 12,
                      "currency": "usd",
                      "current": 15,
                      "original": 20
                    }
                  ],
                  "properties": {
                    "cost": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "current": {
                      "type": "number"
                    },
                    "original": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "original"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "media": {
                      "items": {
                        "properties": {
                          "file": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "PushNotificationForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "body": "The desired item is deleted",
                      "subject": "Item Deleted"
                    }
                  ],
                  "properties": {
                    "body": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "subject",
                    "body"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "hook": "user.created",
                      "lang": "es",
                      "slug": "user.created"
                    }
                  ],
                  "properties": {
                    "hook": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hook"
                  ],
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "QuoteForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "base_amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "discount_amount": {
                      "type": "number"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "is_company": {
                      "type": "boolean"
                    },
                    "model_id": {
                      "type": "integer"
                    },
                    "model_name": {
                      "type": "string"
                    },
                    "person_id": {
                      "type": "integer"
                    },
                    "status_id": {
                      "type": "integer"
                    },
                    "total_amount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "base_amount",
                    "status_id"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "items": {
                      "example": [
                        {
                          "discount": 10.2,
                          "qty": 5,
                          "quote_id": 10,
                          "quote_type": "invoice",
                          "unit_price": 53.32
                        }
                      ],
                      "properties": {
                        "discount": {
                          "type": "number"
                        },
                        "qty": {
                          "type": "integer"
                        },
                        "quote_id": {
                          "type": "integer"
                        },
                        "quote_type": {
                          "type": "string"
                        },
                        "unit_price": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "quote_type",
                        "quote_id",
                        "unit_price"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "RecurringProfileForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "allOf": [
                    {
                      "properties": {
                        "base_amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "discount_amount": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "is_company": {
                          "type": "boolean"
                        },
                        "model_id": {
                          "type": "integer"
                        },
                        "model_name": {
                          "type": "string"
                        },
                        "person_id": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "total_amount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "base_amount",
                        "status_id"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "method_id": {
                          "type": "integer"
                        },
                        "tax_amount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "method_id"
                      ],
                      "type": "object"
                    }
                  ]
                },
                {
                  "properties": {
                    "duration_unit": {
                      "type": "integer"
                    },
                    "duration_value": {
                      "type": "integer"
                    },
                    "repetition_times": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "RoleForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "guard_name": "testing123",
                  "name": "admin",
                  "permissions": [
                    1,
                    5,
                    10
                  ]
                }
              ],
              "properties": {
                "guard_name": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "permissions": {
                  "items": {},
                  "type": "array"
                }
              },
              "required": [
                "name",
                "guard_name"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "ServiceForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "description": "Write something to describe",
                      "lang": "en",
                      "title": "Some Title"
                    }
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "category_id": 5,
                      "currency": "usd",
                      "current": 30,
                      "is_recurring": false,
                      "original": 34.23,
                      "price_unit": 5
                    }
                  ],
                  "properties": {
                    "category_id": {
                      "type": "integer"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "current": {
                      "type": "number"
                    },
                    "is_recurring": {
                      "type": "boolean"
                    },
                    "original": {
                      "type": "number"
                    },
                    "price_unit": {
                      "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "category_id",
                    "original",
                    "price_unit"
                  ],
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "ServiceOrderForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "base_amount": 23.34,
                  "currency": "usd",
                  "customer": 5
                }
              ],
              "properties": {
                "base_amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "customer": {
                  "type": "integer"
                },
                "discount": {
                  "type": "number"
                },
                "items": {
                  "items": {
                    "example": [
                      {
                        "discount": 23.53,
                        "qty": 3,
                        "service_id": 3,
                        "unit_price": 50.23
                      }
                    ],
                    "properties": {
                      "discount": {
                        "type": "number"
                      },
                      "qty": {
                        "type": "integer"
                      },
                      "service_id": {
                        "type": "string"
                      },
                      "unit_price": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "service_id",
                      "unit_price"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "status_id": {
                  "type": "integer"
                }
              },
              "required": [
                "currency",
                "base_amount",
                "customer",
                "items"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "ShippingMethodForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "description": "Write something to describe",
                      "lang": "en",
                      "title": "Some Title"
                    }
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "currency": "usd",
                      "rate_by": 3,
                      "slug": "fedex",
                      "status_id": 7
                    }
                  ],
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "rate_by": {
                      "description": "This will decide weather its rate is fixed, product wise or zone wise",
                      "type": "integer"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "slug",
                    "rate_by",
                    "currency"
                  ],
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "ShippingZoneForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "city": "newyork",
                  "country": "us",
                  "methods": {
                    "1": null,
                    "3": null,
                    "4": null
                  },
                  "state": "newyork",
                  "title": "Newyork",
                  "zip": 35840
                }
              ],
              "properties": {
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "methods": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "country"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "SmsNotificationForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "body": "Please check the package now"
                    }
                  ],
                  "properties": {
                    "body": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "body"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "hook": "user.created",
                      "lang": "es",
                      "slug": "user.created"
                    }
                  ],
                  "properties": {
                    "hook": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hook"
                  ],
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "StoreForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "allOf": [
                {
                  "example": [
                    {
                      "description": "Write something to describe",
                      "lang": "en",
                      "title": "Some Title"
                    }
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title"
                  ],
                  "type": "object"
                },
                {
                  "example": [
                    {
                      "extra": {},
                      "owner": 5,
                      "slug": "dummy-store",
                      "status": 1
                    }
                  ],
                  "properties": {
                    "extra": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "owner": {
                      "type": "integer"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "slug",
                    "owner"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "media": {
                      "items": {
                        "properties": {
                          "file": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "required": true
      },
      "TermForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "extra": {},
                  "module_name": "base",
                  "parent_id": 0,
                  "slug": "gender",
                  "title": "Gender"
                }
              ],
              "properties": {
                "extra": {
                  "items": {},
                  "type": "array"
                },
                "module_name": {
                  "type": "string"
                },
                "parent_id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "UserForm": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "example": [
                {
                  "email": "abc@testing.com",
                  "lang": "en",
                  "password": "testing123",
                  "permissions": [
                    "create.user",
                    "create.person"
                  ],
                  "roles": [
                    "admin"
                  ],
                  "username": "john"
                }
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "lang": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "permissions": {
                  "items": {},
                  "type": "array"
                },
                "roles": {
                  "items": {},
                  "type": "array"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password",
                "email"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "description": "A user with the specified ID was not found."
      },
      "ObjectDeleted": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Requested Item has been deleted successfully"
      },
      "SuccessfulRequest": {
        "description": "A success message on processing a request"
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "description": "Authorization information is missing or invalid."
      },
      "UnepectedError": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "description": "Unexpected error."
      }
    },
    "schemas": {
      "Address": {
        "example": [
          {
            "addr1": "Apr 4, Floo3",
            "addr2": "White hall road",
            "city": "Sialkot",
            "country": "PK",
            "lat": 23,
            "lng": 32.23,
            "state": "Punjab",
            "zip_code": 51310
          }
        ],
        "properties": {
          "addr1": {
            "type": "string"
          },
          "addr2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "lat": {
            "type": "string"
          },
          "lng": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          }
        },
        "required": [
          "addr1",
          "city",
          "zip_code",
          "country"
        ],
        "type": "object"
      },
      "Branch": {
        "example": [
          {
            "company_id": 5,
            "name": "A big Compan LT",
            "phone1": 23432432,
            "phone2": 234234234
          }
        ],
        "properties": {
          "address": {
            "example": [
              {
                "addr1": "Apr 4, Floo3",
                "addr2": "White hall road",
                "city": "Sialkot",
                "country": "PK",
                "lat": 23,
                "lng": 32.23,
                "state": "Punjab",
                "zip_code": 51310
              }
            ],
            "properties": {
              "addr1": {
                "type": "string"
              },
              "addr2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "lat": {
                "type": "string"
              },
              "lng": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip_code": {
                "type": "string"
              }
            },
            "required": [
              "addr1",
              "city",
              "zip_code",
              "country"
            ],
            "type": "object"
          },
          "company_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "company_id"
        ],
        "type": "object"
      },
      "CartOrder": {
        "example": [
          {
            "products": [],
            "total_amount": 200,
            "total_items": 15,
            "user_id": 3
          }
        ],
        "properties": {
          "products": {
            "items": {
              "properties": {
                "product_id": {
                  "type": "integer"
                },
                "qty": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "total_amount": {
            "type": "number"
          },
          "total_items": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CartProduct": {
        "properties": {
          "attributes": {
            "properties": {
              "slug": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "media": {
            "properties": {
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "pricing": {
            "properties": {
              "currency": {
                "type": "number"
              },
              "current": {
                "type": "number"
              },
              "original": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "product_id": {
            "type": "integer"
          },
          "qty": {
            "type": "integer"
          },
          "sku": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "total_price": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "CartReview": {
        "allOf": [
          {
            "properties": {
              "billing_addr": {
                "example": [
                  {
                    "addr1": "Apr 4, Floo3",
                    "addr2": "White hall road",
                    "city": "Sialkot",
                    "country": "PK",
                    "lat": 23,
                    "lng": 32.23,
                    "state": "Punjab",
                    "zip_code": 51310
                  }
                ],
                "properties": {
                  "addr1": {
                    "type": "string"
                  },
                  "addr2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "addr1",
                  "city",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "customer": {
                "allOf": [
                  {
                    "example": [
                      {
                        "email": "john@test.com",
                        "first_name": "John",
                        "gender_id": 5,
                        "last_name": "Smith",
                        "middlename": "Allien",
                        "phone1": 234234234,
                        "phone2": 234234234,
                        "title": "mr"
                      }
                    ],
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "gender_id": {
                        "type": "integer"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "middlename": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "products": {
                "items": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "media": {
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "pricing": {
                      "properties": {
                        "currency": {
                          "type": "number"
                        },
                        "current": {
                          "type": "number"
                        },
                        "original": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "product_id": {
                      "type": "integer"
                    },
                    "qty": {
                      "type": "integer"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "total_price": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "ship_addr": {
                "example": [
                  {
                    "addr1": "Apr 4, Floo3",
                    "addr2": "White hall road",
                    "city": "Sialkot",
                    "country": "PK",
                    "lat": 23,
                    "lng": 32.23,
                    "state": "Punjab",
                    "zip_code": 51310
                  }
                ],
                "properties": {
                  "addr1": {
                    "type": "string"
                  },
                  "addr2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "addr1",
                  "city",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "shipment_method": {
                "properties": {
                  "slug": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "totals": {
                "properties": {
                  "discount": {
                    "type": "number"
                  },
                  "shiping": {
                    "type": "number"
                  },
                  "sub_total": {
                    "type": "number"
                  },
                  "tax": {
                    "type": "number"
                  },
                  "total": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CartShipment": {
        "allOf": [
          {
            "properties": {
              "billing_addr": {
                "example": [
                  {
                    "addr1": "Apr 4, Floo3",
                    "addr2": "White hall road",
                    "city": "Sialkot",
                    "country": "PK",
                    "lat": 23,
                    "lng": 32.23,
                    "state": "Punjab",
                    "zip_code": 51310
                  }
                ],
                "properties": {
                  "addr1": {
                    "type": "string"
                  },
                  "addr2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "addr1",
                  "city",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "billing_id": {
                "type": "integer"
              },
              "customer": {
                "allOf": [
                  {
                    "example": [
                      {
                        "email": "john@test.com",
                        "first_name": "John",
                        "gender_id": 5,
                        "last_name": "Smith",
                        "middlename": "Allien",
                        "phone1": 234234234,
                        "phone2": 234234234,
                        "title": "mr"
                      }
                    ],
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "gender_id": {
                        "type": "integer"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "middlename": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "customer_id": {
                "type": "integer"
              },
              "ship_addr": {
                "example": [
                  {
                    "addr1": "Apr 4, Floo3",
                    "addr2": "White hall road",
                    "city": "Sialkot",
                    "country": "PK",
                    "lat": 23,
                    "lng": 32.23,
                    "state": "Punjab",
                    "zip_code": 51310
                  }
                ],
                "properties": {
                  "addr1": {
                    "type": "string"
                  },
                  "addr2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "addr1",
                  "city",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "ship_id": {
                "type": "integer"
              },
              "shipment_method": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "Classified": {
        "properties": {
          "allow_chat": {
            "type": "integer"
          },
          "attributes": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "calL_price": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "show_email": {
            "type": "integer"
          },
          "show_phone": {
            "type": "integer"
          },
          "status_id": {
            "type": "integer"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "category_id",
          "show_phone",
          "show_email",
          "allow_chat",
          "customer_id",
          "status_id",
          "currency",
          "price"
        ],
        "type": "object"
      },
      "ClassifiedDefinition": {
        "example": [
          {
            "categories": [
              1,
              6,
              8
            ],
            "title": "Iphone 7"
          }
        ],
        "properties": {
          "categories": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "categories"
        ],
        "type": "object"
      },
      "ClassifiedDefinitionField": {
        "example": [
          {
            "field_id": 6,
            "options": [
              3,
              6,
              3
            ]
          }
        ],
        "properties": {
          "field_id": {
            "type": "integer"
          },
          "options": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "field_id",
          "options"
        ],
        "type": "object"
      },
      "ClassifiedTerm": {
        "allOf": [
          {
            "example": [
              {
                "extra": {},
                "module_name": "base",
                "parent_id": 0,
                "slug": "gender",
                "title": "Gender"
              }
            ],
            "properties": {
              "extra": {
                "items": {},
                "type": "array"
              },
              "module_name": {
                "type": "string"
              },
              "parent_id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "slug"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "attribute_categories": [
                  5,
                  6
                ]
              }
            ],
            "properties": {
              "attribute_categories": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "Company": {
        "allOf": [
          {
            "example": [
              {
                "name": "A big Compan LT",
                "phone1": 23432432,
                "phone2": 234234234
              }
            ],
            "properties": {
              "address": {
                "example": [
                  {
                    "addr1": "Apr 4, Floo3",
                    "addr2": "White hall road",
                    "city": "Sialkot",
                    "country": "PK",
                    "lat": 23,
                    "lng": 32.23,
                    "state": "Punjab",
                    "zip_code": 51310
                  }
                ],
                "properties": {
                  "addr1": {
                    "type": "string"
                  },
                  "addr2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "addr1",
                  "city",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "phone1": {
                "type": "string"
              },
              "phone2": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          {
            "properties": {
              "media": {
                "items": {
                  "properties": {
                    "file": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "EmailNotification": {
        "allOf": [
          {
            "example": [
              {
                "html_body": "<b>Hello friend</b>, You are now registered",
                "subject": "Welcome to WF",
                "text_body": "Hello Friend, you are now registerd"
              }
            ],
            "properties": {
              "html_body": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "text_body": {
                "type": "string"
              }
            },
            "required": [
              "subject",
              "html_body"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "hook": "user.created",
                "lang": "es",
                "slug": "user.created"
              }
            ],
            "properties": {
              "hook": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "hook"
            ],
            "type": "object"
          }
        ]
      },
      "Error": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "FormFields": {
        "allOf": [
          {
            "example": [
              {
                "description": "Write something to describe",
                "lang": "en",
                "title": "Some Title"
              }
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "category_id": 4,
                "help": "You can provide color",
                "is_required": false,
                "is_unique": true,
                "type_id": 1,
                "validate_type_id": 3
              }
            ],
            "properties": {
              "category_id": {
                "type": "integer"
              },
              "help": {
                "type": "string"
              },
              "is_required": {
                "type": "boolean"
              },
              "is_unique": {
                "type": "boolean"
              },
              "options": {
                "items": {
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "type_id": {
                "type": "integer"
              },
              "validate_extra": {
                "type": "object"
              },
              "validate_type_id": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "Invoice": {
        "allOf": [
          {
            "properties": {
              "base_amount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "discount_amount": {
                "type": "number"
              },
              "identifier": {
                "type": "string"
              },
              "is_company": {
                "type": "boolean"
              },
              "model_id": {
                "type": "integer"
              },
              "model_name": {
                "type": "string"
              },
              "person_id": {
                "type": "integer"
              },
              "status_id": {
                "type": "integer"
              },
              "total_amount": {
                "type": "number"
              }
            },
            "required": [
              "base_amount",
              "status_id"
            ],
            "type": "object"
          },
          {
            "properties": {
              "method_id": {
                "type": "integer"
              },
              "tax_amount": {
                "type": "number"
              }
            },
            "required": [
              "method_id"
            ],
            "type": "object"
          }
        ]
      },
      "Media": {
        "properties": {
          "media": {
            "items": {
              "properties": {
                "file": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Menu": {
        "allOf": [
          {
            "example": [
              {
                "extra": {},
                "module_name": "base",
                "parent_id": 0,
                "slug": "gender",
                "title": "Gender"
              }
            ],
            "properties": {
              "extra": {
                "items": {},
                "type": "array"
              },
              "module_name": {
                "type": "string"
              },
              "parent_id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "slug"
            ],
            "type": "object"
          },
          {
            "properties": {
              "Items": {
                "items": {
                  "properties": {
                    "class_name": {
                      "type": "string"
                    },
                    "condition": {
                      "type": "string"
                    },
                    "extra": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "link_type": {
                      "type": "string"
                    },
                    "link_value": {
                      "type": "string"
                    },
                    "menu_id": {
                      "type": "integer"
                    },
                    "parent_id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "menu_id"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "MenuItem": {
        "properties": {
          "class_name": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "extra": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "link_type": {
            "type": "string"
          },
          "link_value": {
            "type": "string"
          },
          "menu_id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "menu_id"
        ],
        "type": "object"
      },
      "Moderation": {
        "properties": {
          "logs": {
            "items": {
              "properties": {
                "details": {
                  "type": "object"
                },
                "extra": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "original": {
            "type": "object"
          },
          "status_id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notification": {
        "example": [
          {
            "hook": "user.created",
            "lang": "es",
            "slug": "user.created"
          }
        ],
        "properties": {
          "hook": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "hook"
        ],
        "type": "object"
      },
      "Order": {
        "allOf": [
          {
            "example": [
              {
                "products": [],
                "total_amount": 200,
                "total_items": 15,
                "user_id": 3
              }
            ],
            "properties": {
              "products": {
                "items": {
                  "properties": {
                    "product_id": {
                      "type": "integer"
                    },
                    "qty": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "total_amount": {
                "type": "number"
              },
              "total_items": {
                "type": "integer"
              },
              "user_id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "status_id": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderedItems": {
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "qty": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Page": {
        "properties": {
          "body": {
            "type": "string"
          },
          "extra": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lang": {
            "type": "string"
          },
          "slug": {
            "type": "integer"
          },
          "status_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "body",
          "slug"
        ],
        "type": "object"
      },
      "PaymentRecord": {
        "properties": {
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "extra": {
            "type": "object"
          },
          "method_id": {
            "type": "integer"
          },
          "status_id": {
            "type": "integer"
          },
          "type_id": {
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "type_id",
          "status_id",
          "method_id"
        ],
        "type": "object"
      },
      "Permission": {
        "example": [
          {
            "guard_name": "*",
            "name": "create.user"
          }
        ],
        "properties": {
          "guard_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "guard_name"
        ],
        "type": "object"
      },
      "Person": {
        "allOf": [
          {
            "example": [
              {
                "email": "john@test.com",
                "first_name": "John",
                "gender_id": 5,
                "last_name": "Smith",
                "middlename": "Allien",
                "phone1": 234234234,
                "phone2": 234234234,
                "title": "mr"
              }
            ],
            "properties": {
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "gender_id": {
                "type": "integer"
              },
              "last_name": {
                "type": "string"
              },
              "middlename": {
                "type": "string"
              },
              "phone1": {
                "type": "string"
              },
              "phone2": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "first_name",
              "last_name",
              "email"
            ],
            "type": "object"
          },
          {
            "properties": {
              "media": {
                "items": {
                  "properties": {
                    "file": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "Phrase": {
        "example": [
          {
            "lang": "en",
            "locked": true,
            "module_name": "base",
            "phrase": "Hello World",
            "slug": "hello.word",
            "unstable": false
          }
        ],
        "properties": {
          "lang": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "module_name": {
            "type": "string"
          },
          "phrase": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "unstable": {
            "type": "boolean"
          }
        },
        "required": [
          "phrase",
          "slug",
          "lang"
        ],
        "type": "object"
      },
      "Product": {
        "allOf": [
          {
            "example": [
              {
                "description": "Write something to describe",
                "lang": "en",
                "title": "Some Title"
              }
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "category_id": "Please check the package now",
                "extra": [],
                "short_description": "anything short",
                "sku": 35542340135323,
                "type_id": 3
              }
            ],
            "properties": {
              "category_id": {
                "type": "integer"
              },
              "extra": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "short_description": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "type_id": {
                "type": "integer"
              }
            },
            "required": [
              "category_id",
              "type_id",
              "sku"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "cost": 12,
                "currency": "usd",
                "current": 15,
                "original": 20
              }
            ],
            "properties": {
              "cost": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "current": {
                "type": "number"
              },
              "original": {
                "type": "number"
              }
            },
            "required": [
              "original"
            ],
            "type": "object"
          },
          {
            "properties": {
              "media": {
                "items": {
                  "properties": {
                    "file": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductPricing": {
        "example": [
          {
            "cost": 12,
            "currency": "usd",
            "current": 15,
            "original": 20
          }
        ],
        "properties": {
          "cost": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "current": {
            "type": "number"
          },
          "original": {
            "type": "number"
          }
        },
        "required": [
          "original"
        ],
        "type": "object"
      },
      "PushNotification": {
        "allOf": [
          {
            "example": [
              {
                "body": "The desired item is deleted",
                "subject": "Item Deleted"
              }
            ],
            "properties": {
              "body": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              }
            },
            "required": [
              "subject",
              "body"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "hook": "user.created",
                "lang": "es",
                "slug": "user.created"
              }
            ],
            "properties": {
              "hook": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "hook"
            ],
            "type": "object"
          }
        ]
      },
      "Quote": {
        "allOf": [
          {
            "properties": {
              "base_amount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "discount_amount": {
                "type": "number"
              },
              "identifier": {
                "type": "string"
              },
              "is_company": {
                "type": "boolean"
              },
              "model_id": {
                "type": "integer"
              },
              "model_name": {
                "type": "string"
              },
              "person_id": {
                "type": "integer"
              },
              "status_id": {
                "type": "integer"
              },
              "total_amount": {
                "type": "number"
              }
            },
            "required": [
              "base_amount",
              "status_id"
            ],
            "type": "object"
          },
          {
            "properties": {
              "items": {
                "example": [
                  {
                    "discount": 10.2,
                    "qty": 5,
                    "quote_id": 10,
                    "quote_type": "invoice",
                    "unit_price": 53.32
                  }
                ],
                "properties": {
                  "discount": {
                    "type": "number"
                  },
                  "qty": {
                    "type": "integer"
                  },
                  "quote_id": {
                    "type": "integer"
                  },
                  "quote_type": {
                    "type": "string"
                  },
                  "unit_price": {
                    "type": "number"
                  }
                },
                "required": [
                  "quote_type",
                  "quote_id",
                  "unit_price"
                ],
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "QuoteAndInvoice": {
        "properties": {
          "base_amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "discount_amount": {
            "type": "number"
          },
          "identifier": {
            "type": "string"
          },
          "is_company": {
            "type": "boolean"
          },
          "model_id": {
            "type": "integer"
          },
          "model_name": {
            "type": "string"
          },
          "person_id": {
            "type": "integer"
          },
          "status_id": {
            "type": "integer"
          },
          "total_amount": {
            "type": "number"
          }
        },
        "required": [
          "base_amount",
          "status_id"
        ],
        "type": "object"
      },
      "QuoteItem": {
        "example": [
          {
            "discount": 10.2,
            "qty": 5,
            "quote_id": 10,
            "quote_type": "invoice",
            "unit_price": 53.32
          }
        ],
        "properties": {
          "discount": {
            "type": "number"
          },
          "qty": {
            "type": "integer"
          },
          "quote_id": {
            "type": "integer"
          },
          "quote_type": {
            "type": "string"
          },
          "unit_price": {
            "type": "number"
          }
        },
        "required": [
          "quote_type",
          "quote_id",
          "unit_price"
        ],
        "type": "object"
      },
      "RecurringProfile": {
        "allOf": [
          {
            "allOf": [
              {
                "properties": {
                  "base_amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "discount_amount": {
                    "type": "number"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "is_company": {
                    "type": "boolean"
                  },
                  "model_id": {
                    "type": "integer"
                  },
                  "model_name": {
                    "type": "string"
                  },
                  "person_id": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "total_amount": {
                    "type": "number"
                  }
                },
                "required": [
                  "base_amount",
                  "status_id"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "method_id": {
                    "type": "integer"
                  },
                  "tax_amount": {
                    "type": "number"
                  }
                },
                "required": [
                  "method_id"
                ],
                "type": "object"
              }
            ]
          },
          {
            "properties": {
              "duration_unit": {
                "type": "integer"
              },
              "duration_value": {
                "type": "integer"
              },
              "repetition_times": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "ResponseLinks": {
        "properties": {
          "first": {
            "type": "integer"
          },
          "last": {
            "type": "integer"
          },
          "next": {
            "type": "integer"
          },
          "prev": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResponseMeta": {
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "from": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "per_page": {
            "type": "integer"
          },
          "to": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResponsePaginate": {
        "properties": {
          "links": {
            "properties": {
              "first": {
                "type": "integer"
              },
              "last": {
                "type": "integer"
              },
              "next": {
                "type": "integer"
              },
              "prev": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "current_page": {
                "type": "integer"
              },
              "from": {
                "type": "integer"
              },
              "last_page": {
                "type": "integer"
              },
              "path": {
                "type": "string"
              },
              "per_page": {
                "type": "integer"
              },
              "to": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Role": {
        "example": [
          {
            "guard_name": "testing123",
            "name": "admin",
            "permissions": [
              1,
              5,
              10
            ]
          }
        ],
        "properties": {
          "guard_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {},
            "type": "array"
          }
        },
        "required": [
          "name",
          "guard_name"
        ],
        "type": "object"
      },
      "Service": {
        "allOf": [
          {
            "example": [
              {
                "description": "Write something to describe",
                "lang": "en",
                "title": "Some Title"
              }
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "category_id": 5,
                "currency": "usd",
                "current": 30,
                "is_recurring": false,
                "original": 34.23,
                "price_unit": 5
              }
            ],
            "properties": {
              "category_id": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              },
              "current": {
                "type": "number"
              },
              "is_recurring": {
                "type": "boolean"
              },
              "original": {
                "type": "number"
              },
              "price_unit": {
                "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                "type": "integer"
              }
            },
            "required": [
              "category_id",
              "original",
              "price_unit"
            ],
            "type": "object"
          }
        ]
      },
      "ServiceOrder": {
        "example": [
          {
            "base_amount": 23.34,
            "currency": "usd",
            "customer": 5
          }
        ],
        "properties": {
          "base_amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "customer": {
            "type": "integer"
          },
          "discount": {
            "type": "number"
          },
          "items": {
            "items": {
              "example": [
                {
                  "discount": 23.53,
                  "qty": 3,
                  "service_id": 3,
                  "unit_price": 50.23
                }
              ],
              "properties": {
                "discount": {
                  "type": "number"
                },
                "qty": {
                  "type": "integer"
                },
                "service_id": {
                  "type": "string"
                },
                "unit_price": {
                  "type": "number"
                }
              },
              "required": [
                "service_id",
                "unit_price"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "status_id": {
            "type": "integer"
          }
        },
        "required": [
          "currency",
          "base_amount",
          "customer",
          "items"
        ],
        "type": "object"
      },
      "ServiceOrderItem": {
        "example": [
          {
            "discount": 23.53,
            "qty": 3,
            "service_id": 3,
            "unit_price": 50.23
          }
        ],
        "properties": {
          "discount": {
            "type": "number"
          },
          "qty": {
            "type": "integer"
          },
          "service_id": {
            "type": "string"
          },
          "unit_price": {
            "type": "number"
          }
        },
        "required": [
          "service_id",
          "unit_price"
        ],
        "type": "object"
      },
      "ShippingMethod": {
        "allOf": [
          {
            "example": [
              {
                "description": "Write something to describe",
                "lang": "en",
                "title": "Some Title"
              }
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "currency": "usd",
                "rate_by": 3,
                "slug": "fedex",
                "status_id": 7
              }
            ],
            "properties": {
              "currency": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "rate_by": {
                "description": "This will decide weather its rate is fixed, product wise or zone wise",
                "type": "integer"
              },
              "slug": {
                "type": "string"
              },
              "status_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "slug",
              "rate_by",
              "currency"
            ],
            "type": "object"
          }
        ]
      },
      "ShippingZone": {
        "example": [
          {
            "city": "newyork",
            "country": "us",
            "methods": {
              "1": null,
              "3": null,
              "4": null
            },
            "state": "newyork",
            "title": "Newyork",
            "zip": 35840
          }
        ],
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "methods": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "country"
        ],
        "type": "object"
      },
      "SmsNotification": {
        "allOf": [
          {
            "example": [
              {
                "body": "Please check the package now"
              }
            ],
            "properties": {
              "body": {
                "type": "string"
              }
            },
            "required": [
              "body"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "hook": "user.created",
                "lang": "es",
                "slug": "user.created"
              }
            ],
            "properties": {
              "hook": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "hook"
            ],
            "type": "object"
          }
        ]
      },
      "Store": {
        "allOf": [
          {
            "example": [
              {
                "description": "Write something to describe",
                "lang": "en",
                "title": "Some Title"
              }
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "type": "object"
          },
          {
            "example": [
              {
                "extra": {},
                "owner": 5,
                "slug": "dummy-store",
                "status": 1
              }
            ],
            "properties": {
              "extra": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "owner": {
                "type": "integer"
              },
              "slug": {
                "type": "string"
              },
              "status_id": {
                "type": "integer"
              }
            },
            "required": [
              "slug",
              "owner"
            ],
            "type": "object"
          },
          {
            "properties": {
              "media": {
                "items": {
                  "properties": {
                    "file": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "Term": {
        "example": [
          {
            "extra": {},
            "module_name": "base",
            "parent_id": 0,
            "slug": "gender",
            "title": "Gender"
          }
        ],
        "properties": {
          "extra": {
            "items": {},
            "type": "array"
          },
          "module_name": {
            "type": "string"
          },
          "parent_id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "slug"
        ],
        "type": "object"
      },
      "TransTitle": {
        "example": [
          {
            "description": "Write something to describe",
            "lang": "en",
            "title": "Some Title"
          }
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "User": {
        "example": [
          {
            "email": "abc@testing.com",
            "lang": "en",
            "password": "testing123",
            "permissions": [
              "create.user",
              "create.person"
            ],
            "roles": [
              "admin"
            ],
            "username": "john"
          }
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "permissions": {
            "items": {},
            "type": "array"
          },
          "roles": {
            "items": {},
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password",
          "email"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "description": "This is set of APIs for interacting with white falcon modules.",
    "title": "White Falcon Modules API",
    "version": "1.1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/auth": {
      "get": {
        "description": "",
        "operationId": "authGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "api_token": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get authenticated User's information",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "",
        "operationId": "authValidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Validate via email or username",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "api_token": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get Credentials Verified",
        "tags": [
          "User"
        ]
      },
      "summary": "All operations related to a user authentication"
    },
    "/branches": {
      "get": {
        "description": "",
        "operationId": "branchList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "company_id": 5,
                                "name": "A big Compan LT",
                                "phone1": 23432432,
                                "phone2": 234234234
                              }
                            ],
                            "properties": {
                              "address": {
                                "example": [
                                  {
                                    "addr1": "Apr 4, Floo3",
                                    "addr2": "White hall road",
                                    "city": "Sialkot",
                                    "country": "PK",
                                    "lat": 23,
                                    "lng": 32.23,
                                    "state": "Punjab",
                                    "zip_code": 51310
                                  }
                                ],
                                "properties": {
                                  "addr1": {
                                    "type": "string"
                                  },
                                  "addr2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "lat": {
                                    "type": "string"
                                  },
                                  "lng": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "addr1",
                                  "city",
                                  "zip_code",
                                  "country"
                                ],
                                "type": "object"
                              },
                              "company_id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "phone1": {
                                "type": "string"
                              },
                              "phone2": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "company_id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all branches on system",
        "tags": [
          "Entity"
        ]
      },
      "post": {
        "description": "",
        "operationId": "branchCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "company_id": 5,
                    "name": "A big Compan LT",
                    "phone1": 23432432,
                    "phone2": 234234234
                  }
                ],
                "properties": {
                  "address": {
                    "example": [
                      {
                        "addr1": "Apr 4, Floo3",
                        "addr2": "White hall road",
                        "city": "Sialkot",
                        "country": "PK",
                        "lat": 23,
                        "lng": 32.23,
                        "state": "Punjab",
                        "zip_code": 51310
                      }
                    ],
                    "properties": {
                      "addr1": {
                        "type": "string"
                      },
                      "addr2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "lat": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "addr1",
                      "city",
                      "zip_code",
                      "country"
                    ],
                    "type": "object"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone1": {
                    "type": "string"
                  },
                  "phone2": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "company_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "company_id": 5,
                          "name": "A big Compan LT",
                          "phone1": 23432432,
                          "phone2": 234234234
                        }
                      ],
                      "properties": {
                        "address": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone1": {
                          "type": "string"
                        },
                        "phone2": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "company_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Branch",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Everything related to general branch related calls"
    },
    "/branches/{branch}": {
      "delete": {
        "description": "",
        "operationId": "branchDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual branch",
        "tags": [
          "Entity"
        ]
      },
      "get": {
        "description": "",
        "operationId": "branchGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "company_id": 5,
                          "name": "A big Compan LT",
                          "phone1": 23432432,
                          "phone2": 234234234
                        }
                      ],
                      "properties": {
                        "address": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone1": {
                          "type": "string"
                        },
                        "phone2": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "company_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual branch",
        "tags": [
          "Entity"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the branch model",
          "in": "path",
          "name": "branch",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "branchUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "company_id": 5,
                    "name": "A big Compan LT",
                    "phone1": 23432432,
                    "phone2": 234234234
                  }
                ],
                "properties": {
                  "address": {
                    "example": [
                      {
                        "addr1": "Apr 4, Floo3",
                        "addr2": "White hall road",
                        "city": "Sialkot",
                        "country": "PK",
                        "lat": 23,
                        "lng": 32.23,
                        "state": "Punjab",
                        "zip_code": 51310
                      }
                    ],
                    "properties": {
                      "addr1": {
                        "type": "string"
                      },
                      "addr2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "lat": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "addr1",
                      "city",
                      "zip_code",
                      "country"
                    ],
                    "type": "object"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone1": {
                    "type": "string"
                  },
                  "phone2": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "company_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "company_id": 5,
                          "name": "A big Compan LT",
                          "phone1": 23432432,
                          "phone2": 234234234
                        }
                      ],
                      "properties": {
                        "address": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone1": {
                          "type": "string"
                        },
                        "phone2": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "company_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual branch",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single branch"
    },
    "/classified-categories": {
      "get": {
        "description": "",
        "operationId": "classifiedcategoriesList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "extra": {},
                                    "module_name": "base",
                                    "parent_id": 0,
                                    "slug": "gender",
                                    "title": "Gender"
                                  }
                                ],
                                "properties": {
                                  "extra": {
                                    "items": {},
                                    "type": "array"
                                  },
                                  "module_name": {
                                    "type": "string"
                                  },
                                  "parent_id": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "slug"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "attribute_categories": [
                                      5,
                                      6
                                    ]
                                  }
                                ],
                                "properties": {
                                  "attribute_categories": {
                                    "items": {
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all classified categories",
        "tags": [
          "Classified"
        ]
      },
      "post": {
        "description": "",
        "operationId": "classfiedCategoryCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "extra": {},
                        "module_name": "base",
                        "parent_id": 0,
                        "slug": "gender",
                        "title": "Gender"
                      }
                    ],
                    "properties": {
                      "extra": {
                        "items": {},
                        "type": "array"
                      },
                      "module_name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "slug"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "attribute_categories": [
                          5,
                          6
                        ]
                      }
                    ],
                    "properties": {
                      "attribute_categories": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "attribute_categories": [
                                5,
                                6
                              ]
                            }
                          ],
                          "properties": {
                            "attribute_categories": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New ClassifiedTerm",
        "tags": [
          "Classified"
        ]
      },
      "summary": "All basic calls to main object URL"
    },
    "/classified-categories/{classfiedCategory}": {
      "delete": {
        "description": "",
        "operationId": "classfiedCategoryDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual classfiedCategory",
        "tags": [
          "Classified"
        ]
      },
      "get": {
        "description": "",
        "operationId": "classfiedCategoryGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "attribute_categories": [
                                5,
                                6
                              ]
                            }
                          ],
                          "properties": {
                            "attribute_categories": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual classfiedCategory",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID or slug of the classfiedCategory to get",
          "in": "path",
          "name": "classfiedCategory",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "classfiedCategoryUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "extra": {},
                        "module_name": "base",
                        "parent_id": 0,
                        "slug": "gender",
                        "title": "Gender"
                      }
                    ],
                    "properties": {
                      "extra": {
                        "items": {},
                        "type": "array"
                      },
                      "module_name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "slug"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "attribute_categories": [
                          5,
                          6
                        ]
                      }
                    ],
                    "properties": {
                      "attribute_categories": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "attribute_categories": [
                                5,
                                6
                              ]
                            }
                          ],
                          "properties": {
                            "attribute_categories": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual classfiedCategory",
        "tags": [
          "Classified"
        ]
      },
      "summary": "Operations related to a single classfiedCategory"
    },
    "/classified-categories/{classfiedCategory}/children": {
      "get": {
        "description": "",
        "operationId": "classfiedCategoryChildren",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "attribute_categories": [
                                5,
                                6
                              ]
                            }
                          ],
                          "properties": {
                            "attribute_categories": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get list of children for an individual classified-categories",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID or slug of the classfiedCategory to get",
          "in": "path",
          "name": "classfiedCategory",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Current page number that needs to be rendered",
          "in": "query",
          "name": "page",
          "required": false,
          "schema": {
            "default": 0,
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          }
        },
        {
          "description": "Maximum number of items to return.",
          "in": "query",
          "name": "limit",
          "required": false,
          "schema": {
            "default": 20,
            "format": "int32",
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          }
        },
        {
          "description": "Explain the sorting mechnism for the API",
          "in": "query",
          "name": "sort",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "summary": "Retreive list of children associated with the classfiedCategory"
    },
    "/classified-definitions": {
      "get": {
        "description": "",
        "operationId": "classifiedDefinitionList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "categories": [
                                  1,
                                  6,
                                  8
                                ],
                                "title": "Iphone 7"
                              }
                            ],
                            "properties": {
                              "categories": {
                                "items": {
                                  "type": "integer"
                                },
                                "type": "array"
                              },
                              "status": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "categories"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all classified-definitions on system",
        "tags": [
          "Classified"
        ]
      },
      "post": {
        "description": "",
        "operationId": "classifiedDefinitionCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "categories": [
                      1,
                      6,
                      8
                    ],
                    "title": "Iphone 7"
                  }
                ],
                "properties": {
                  "categories": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "categories"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "categories": [
                            1,
                            6,
                            8
                          ],
                          "title": "Iphone 7"
                        }
                      ],
                      "properties": {
                        "categories": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "status": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "categories"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New ClassifiedDefinition",
        "tags": [
          "Classified"
        ]
      },
      "summary": "Everything related to general classifiedDefinition related calls"
    },
    "/classified-definitions/{classifiedDefinition}": {
      "delete": {
        "description": "",
        "operationId": "classifiedDefinitionDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual classifiedDefinition",
        "tags": [
          "Classified"
        ]
      },
      "get": {
        "description": "",
        "operationId": "classifiedDefinitionGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "categories": [
                            1,
                            6,
                            8
                          ],
                          "title": "Iphone 7"
                        }
                      ],
                      "properties": {
                        "categories": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "status": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "categories"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual classifiedDefinition",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the classifiedDefinition model",
          "in": "path",
          "name": "classifiedDefinition",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "classifiedDefinitionUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "categories": [
                      1,
                      6,
                      8
                    ],
                    "title": "Iphone 7"
                  }
                ],
                "properties": {
                  "categories": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "categories"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "categories": [
                            1,
                            6,
                            8
                          ],
                          "title": "Iphone 7"
                        }
                      ],
                      "properties": {
                        "categories": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "status": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "categories"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual classifiedDefinition",
        "tags": [
          "Classified"
        ]
      },
      "summary": "Operations related to a single classifiedDefinition"
    },
    "/classified-definitions/{classifiedDefinition}/fields": {
      "get": {
        "description": "",
        "operationId": "classifiedDefinitionFieldList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "field_id": 6,
                                "options": [
                                  3,
                                  6,
                                  3
                                ]
                              }
                            ],
                            "properties": {
                              "field_id": {
                                "type": "integer"
                              },
                              "options": {
                                "items": {
                                  "type": "integer"
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "field_id",
                              "options"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all classified-definitions fields on system",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the classifiedDefinition model",
          "in": "path",
          "name": "classifiedDefinition",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "description": "",
        "operationId": "classifiedDefinitionFieldCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "field_id": 6,
                    "options": [
                      3,
                      6,
                      3
                    ]
                  }
                ],
                "properties": {
                  "field_id": {
                    "type": "integer"
                  },
                  "options": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "field_id",
                  "options"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "field_id": 6,
                          "options": [
                            3,
                            6,
                            3
                          ]
                        }
                      ],
                      "properties": {
                        "field_id": {
                          "type": "integer"
                        },
                        "options": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "field_id",
                        "options"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New ClassifiedDefinition",
        "tags": [
          "Classified"
        ]
      },
      "summary": "Everything related to general classifiedDefinition related calls"
    },
    "/classified-definitions/{classifiedDefinition}/fields/{field}": {
      "delete": {
        "description": "",
        "operationId": "classifiedDefinitionFieldDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual classifiedDefinition Field",
        "tags": [
          "Classified"
        ]
      },
      "get": {
        "description": "",
        "operationId": "classifiedDefinitionFieldGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "field_id": 6,
                          "options": [
                            3,
                            6,
                            3
                          ]
                        }
                      ],
                      "properties": {
                        "field_id": {
                          "type": "integer"
                        },
                        "options": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "field_id",
                        "options"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual classifiedDefinition field",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the classifiedDefinition model",
          "in": "path",
          "name": "classifiedDefinition",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "description": "The numbers of items to return",
          "in": "path",
          "name": "field",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "classifiedDefinitionFieldUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "field_id": 6,
                    "options": [
                      3,
                      6,
                      3
                    ]
                  }
                ],
                "properties": {
                  "field_id": {
                    "type": "integer"
                  },
                  "options": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "field_id",
                  "options"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "field_id": 6,
                          "options": [
                            3,
                            6,
                            3
                          ]
                        }
                      ],
                      "properties": {
                        "field_id": {
                          "type": "integer"
                        },
                        "options": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "field_id",
                        "options"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual classifiedDefinition field",
        "tags": [
          "Classified"
        ]
      },
      "summary": "Operations related to a single classifiedDefinition"
    },
    "/classifieds": {
      "get": {
        "description": "",
        "operationId": "classifiedList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "allow_chat": {
                                "type": "integer"
                              },
                              "attributes": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "calL_price": {
                                "type": "integer"
                              },
                              "category_id": {
                                "type": "integer"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "customer_id": {
                                "type": "integer"
                              },
                              "description": {
                                "type": "string"
                              },
                              "price": {
                                "type": "number"
                              },
                              "show_email": {
                                "type": "integer"
                              },
                              "show_phone": {
                                "type": "integer"
                              },
                              "status_id": {
                                "type": "integer"
                              },
                              "tags": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "title": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "category_id",
                              "show_phone",
                              "show_email",
                              "allow_chat",
                              "customer_id",
                              "status_id",
                              "currency",
                              "price"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all classifieds",
        "tags": [
          "Classified"
        ]
      },
      "post": {
        "description": "",
        "operationId": "classifiedCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "allow_chat": {
                    "type": "integer"
                  },
                  "attributes": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "calL_price": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "show_email": {
                    "type": "integer"
                  },
                  "show_phone": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "category_id",
                  "show_phone",
                  "show_email",
                  "allow_chat",
                  "customer_id",
                  "status_id",
                  "currency",
                  "price"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "allow_chat": {
                          "type": "integer"
                        },
                        "attributes": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "calL_price": {
                          "type": "integer"
                        },
                        "category_id": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "show_email": {
                          "type": "integer"
                        },
                        "show_phone": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "tags": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "category_id",
                        "show_phone",
                        "show_email",
                        "allow_chat",
                        "customer_id",
                        "status_id",
                        "currency",
                        "price"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New classified",
        "tags": [
          "Classified"
        ]
      },
      "summary": "All basic calls for the classifieds"
    },
    "/classifieds/{classified}": {
      "delete": {
        "description": "",
        "operationId": "classifiedDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual classified",
        "tags": [
          "Classified"
        ]
      },
      "get": {
        "description": "",
        "operationId": "classifiedGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "allow_chat": {
                          "type": "integer"
                        },
                        "attributes": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "calL_price": {
                          "type": "integer"
                        },
                        "category_id": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "show_email": {
                          "type": "integer"
                        },
                        "show_phone": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "tags": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "category_id",
                        "show_phone",
                        "show_email",
                        "allow_chat",
                        "customer_id",
                        "status_id",
                        "currency",
                        "price"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual classified",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual classified",
          "in": "path",
          "name": "classified",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "classifiedUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "allow_chat": {
                    "type": "integer"
                  },
                  "attributes": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "calL_price": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "show_email": {
                    "type": "integer"
                  },
                  "show_phone": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "category_id",
                  "show_phone",
                  "show_email",
                  "allow_chat",
                  "customer_id",
                  "status_id",
                  "currency",
                  "price"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "allow_chat": {
                          "type": "integer"
                        },
                        "attributes": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "calL_price": {
                          "type": "integer"
                        },
                        "category_id": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "show_email": {
                          "type": "integer"
                        },
                        "show_phone": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "tags": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "category_id",
                        "show_phone",
                        "show_email",
                        "allow_chat",
                        "customer_id",
                        "status_id",
                        "currency",
                        "price"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "Classified"
        ]
      },
      "summary": "Operations related to a single classified"
    },
    "/classifieds/{classified}/price-drops": {
      "delete": {
        "description": "",
        "operationId": "classifiedDeletePriceDrop",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A success message on processing a request"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete An individual classified price drop",
        "tags": [
          "Classified"
        ]
      },
      "get": {
        "description": "",
        "operationId": "classifiedPriceDrop",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A success message on processing a request"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Subscribe to price drop",
        "tags": [
          "Classified"
        ]
      },
      "parameters": [
        {
          "description": "Subscribe to price drop",
          "in": "path",
          "name": "classified",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "summary": "Endpoints for price drop management"
    },
    "/companies": {
      "get": {
        "description": "",
        "operationId": "companyList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "name": "A big Compan LT",
                                    "phone1": 23432432,
                                    "phone2": 234234234
                                  }
                                ],
                                "properties": {
                                  "address": {
                                    "example": [
                                      {
                                        "addr1": "Apr 4, Floo3",
                                        "addr2": "White hall road",
                                        "city": "Sialkot",
                                        "country": "PK",
                                        "lat": 23,
                                        "lng": 32.23,
                                        "state": "Punjab",
                                        "zip_code": 51310
                                      }
                                    ],
                                    "properties": {
                                      "addr1": {
                                        "type": "string"
                                      },
                                      "addr2": {
                                        "type": "string"
                                      },
                                      "city": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "lat": {
                                        "type": "string"
                                      },
                                      "lng": {
                                        "type": "string"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "zip_code": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "addr1",
                                      "city",
                                      "zip_code",
                                      "country"
                                    ],
                                    "type": "object"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "phone1": {
                                    "type": "string"
                                  },
                                  "phone2": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "media": {
                                    "items": {
                                      "properties": {
                                        "file": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all companies on system",
        "tags": [
          "Entity"
        ]
      },
      "post": {
        "description": "",
        "operationId": "companyCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "name": "A big Compan LT",
                        "phone1": 23432432,
                        "phone2": 234234234
                      }
                    ],
                    "properties": {
                      "address": {
                        "example": [
                          {
                            "addr1": "Apr 4, Floo3",
                            "addr2": "White hall road",
                            "city": "Sialkot",
                            "country": "PK",
                            "lat": 23,
                            "lng": 32.23,
                            "state": "Punjab",
                            "zip_code": 51310
                          }
                        ],
                        "properties": {
                          "addr1": {
                            "type": "string"
                          },
                          "addr2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "lat": {
                            "type": "string"
                          },
                          "lng": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "addr1",
                          "city",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "name": "A big Compan LT",
                              "phone1": 23432432,
                              "phone2": 234234234
                            }
                          ],
                          "properties": {
                            "address": {
                              "example": [
                                {
                                  "addr1": "Apr 4, Floo3",
                                  "addr2": "White hall road",
                                  "city": "Sialkot",
                                  "country": "PK",
                                  "lat": 23,
                                  "lng": 32.23,
                                  "state": "Punjab",
                                  "zip_code": 51310
                                }
                              ],
                              "properties": {
                                "addr1": {
                                  "type": "string"
                                },
                                "addr2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                },
                                "lat": {
                                  "type": "string"
                                },
                                "lng": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "addr1",
                                "city",
                                "zip_code",
                                "country"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Company",
        "tags": [
          "Entity"
        ]
      },
      "summary": "General call for all companies"
    },
    "/companies/{company}": {
      "delete": {
        "description": "",
        "operationId": "companyDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual company",
        "tags": [
          "Entity"
        ]
      },
      "get": {
        "description": "",
        "operationId": "companyGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "name": "A big Compan LT",
                              "phone1": 23432432,
                              "phone2": 234234234
                            }
                          ],
                          "properties": {
                            "address": {
                              "example": [
                                {
                                  "addr1": "Apr 4, Floo3",
                                  "addr2": "White hall road",
                                  "city": "Sialkot",
                                  "country": "PK",
                                  "lat": 23,
                                  "lng": 32.23,
                                  "state": "Punjab",
                                  "zip_code": 51310
                                }
                              ],
                              "properties": {
                                "addr1": {
                                  "type": "string"
                                },
                                "addr2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                },
                                "lat": {
                                  "type": "string"
                                },
                                "lng": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "addr1",
                                "city",
                                "zip_code",
                                "country"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual company",
        "tags": [
          "Entity"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the company model",
          "in": "path",
          "name": "company",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "companyUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "name": "A big Compan LT",
                        "phone1": 23432432,
                        "phone2": 234234234
                      }
                    ],
                    "properties": {
                      "address": {
                        "example": [
                          {
                            "addr1": "Apr 4, Floo3",
                            "addr2": "White hall road",
                            "city": "Sialkot",
                            "country": "PK",
                            "lat": 23,
                            "lng": 32.23,
                            "state": "Punjab",
                            "zip_code": 51310
                          }
                        ],
                        "properties": {
                          "addr1": {
                            "type": "string"
                          },
                          "addr2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "lat": {
                            "type": "string"
                          },
                          "lng": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "addr1",
                          "city",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "name": "A big Compan LT",
                              "phone1": 23432432,
                              "phone2": 234234234
                            }
                          ],
                          "properties": {
                            "address": {
                              "example": [
                                {
                                  "addr1": "Apr 4, Floo3",
                                  "addr2": "White hall road",
                                  "city": "Sialkot",
                                  "country": "PK",
                                  "lat": 23,
                                  "lng": 32.23,
                                  "state": "Punjab",
                                  "zip_code": 51310
                                }
                              ],
                              "properties": {
                                "addr1": {
                                  "type": "string"
                                },
                                "addr2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                },
                                "lat": {
                                  "type": "string"
                                },
                                "lng": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "zip_code": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "addr1",
                                "city",
                                "zip_code",
                                "country"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual company",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single company"
    },
    "/companies/{company}/branches": {
      "get": {
        "description": "",
        "operationId": "companyBranchList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "company_id": 5,
                                "name": "A big Compan LT",
                                "phone1": 23432432,
                                "phone2": 234234234
                              }
                            ],
                            "properties": {
                              "address": {
                                "example": [
                                  {
                                    "addr1": "Apr 4, Floo3",
                                    "addr2": "White hall road",
                                    "city": "Sialkot",
                                    "country": "PK",
                                    "lat": 23,
                                    "lng": 32.23,
                                    "state": "Punjab",
                                    "zip_code": 51310
                                  }
                                ],
                                "properties": {
                                  "addr1": {
                                    "type": "string"
                                  },
                                  "addr2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "lat": {
                                    "type": "string"
                                  },
                                  "lng": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "addr1",
                                  "city",
                                  "zip_code",
                                  "country"
                                ],
                                "type": "object"
                              },
                              "company_id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "phone1": {
                                "type": "string"
                              },
                              "phone2": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "company_id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all branches of a single company",
        "tags": [
          "Entity"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the company model",
          "in": "path",
          "name": "company",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "description": "",
        "operationId": "companyBranchCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "company_id": 5,
                    "name": "A big Compan LT",
                    "phone1": 23432432,
                    "phone2": 234234234
                  }
                ],
                "properties": {
                  "address": {
                    "example": [
                      {
                        "addr1": "Apr 4, Floo3",
                        "addr2": "White hall road",
                        "city": "Sialkot",
                        "country": "PK",
                        "lat": 23,
                        "lng": 32.23,
                        "state": "Punjab",
                        "zip_code": 51310
                      }
                    ],
                    "properties": {
                      "addr1": {
                        "type": "string"
                      },
                      "addr2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "lat": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "addr1",
                      "city",
                      "zip_code",
                      "country"
                    ],
                    "type": "object"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone1": {
                    "type": "string"
                  },
                  "phone2": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "company_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "company_id": 5,
                          "name": "A big Compan LT",
                          "phone1": 23432432,
                          "phone2": 234234234
                        }
                      ],
                      "properties": {
                        "address": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone1": {
                          "type": "string"
                        },
                        "phone2": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "company_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Branch for a company",
        "tags": [
          "Entity"
        ]
      },
      "summary": "All operations for branches of an individual company"
    },
    "/company/{company}/branches/{branch}": {
      "delete": {
        "description": "",
        "operationId": "companyBranchDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual branch of a company",
        "tags": [
          "Entity"
        ]
      },
      "get": {
        "description": "",
        "operationId": "companyBranchGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "company_id": 5,
                          "name": "A big Compan LT",
                          "phone1": 23432432,
                          "phone2": 234234234
                        }
                      ],
                      "properties": {
                        "address": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone1": {
                          "type": "string"
                        },
                        "phone2": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "company_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual branch of a company",
        "tags": [
          "Entity"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the company model",
          "in": "path",
          "name": "company",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "description": "Numeric ID of the branch model",
          "in": "path",
          "name": "branch",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "companyBranchUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "company_id": 5,
                    "name": "A big Compan LT",
                    "phone1": 23432432,
                    "phone2": 234234234
                  }
                ],
                "properties": {
                  "address": {
                    "example": [
                      {
                        "addr1": "Apr 4, Floo3",
                        "addr2": "White hall road",
                        "city": "Sialkot",
                        "country": "PK",
                        "lat": 23,
                        "lng": 32.23,
                        "state": "Punjab",
                        "zip_code": 51310
                      }
                    ],
                    "properties": {
                      "addr1": {
                        "type": "string"
                      },
                      "addr2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "lat": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "addr1",
                      "city",
                      "zip_code",
                      "country"
                    ],
                    "type": "object"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone1": {
                    "type": "string"
                  },
                  "phone2": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "company_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "company_id": 5,
                          "name": "A big Compan LT",
                          "phone1": 23432432,
                          "phone2": 234234234
                        }
                      ],
                      "properties": {
                        "address": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone1": {
                          "type": "string"
                        },
                        "phone2": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "company_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual branch of a company",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single branch of a company"
    },
    "/customers": {
      "get": {
        "description": "",
        "operationId": "customerList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "email": "john@test.com",
                                    "first_name": "John",
                                    "gender_id": 5,
                                    "last_name": "Smith",
                                    "middlename": "Allien",
                                    "phone1": 234234234,
                                    "phone2": 234234234,
                                    "title": "mr"
                                  }
                                ],
                                "properties": {
                                  "email": {
                                    "type": "string"
                                  },
                                  "first_name": {
                                    "type": "string"
                                  },
                                  "gender_id": {
                                    "type": "integer"
                                  },
                                  "last_name": {
                                    "type": "string"
                                  },
                                  "middlename": {
                                    "type": "string"
                                  },
                                  "phone1": {
                                    "type": "string"
                                  },
                                  "phone2": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "first_name",
                                  "last_name",
                                  "email"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "media": {
                                    "items": {
                                      "properties": {
                                        "file": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all customers on system",
        "tags": [
          "Customer"
        ]
      },
      "post": {
        "description": "",
        "operationId": "customerCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "email": "john@test.com",
                        "first_name": "John",
                        "gender_id": 5,
                        "last_name": "Smith",
                        "middlename": "Allien",
                        "phone1": 234234234,
                        "phone2": 234234234,
                        "title": "mr"
                      }
                    ],
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "gender_id": {
                        "type": "integer"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "middlename": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Person",
        "tags": [
          "Customer"
        ]
      },
      "summary": "Everything related to general customer related calls"
    },
    "/customers/{customer}": {
      "delete": {
        "description": "",
        "operationId": "customerDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual customer",
        "tags": [
          "Customer"
        ]
      },
      "get": {
        "description": "",
        "operationId": "customerGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual customer",
        "tags": [
          "Customer"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the customer model",
          "in": "path",
          "name": "customer",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "customerUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "email": "john@test.com",
                        "first_name": "John",
                        "gender_id": 5,
                        "last_name": "Smith",
                        "middlename": "Allien",
                        "phone1": 234234234,
                        "phone2": 234234234,
                        "title": "mr"
                      }
                    ],
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "gender_id": {
                        "type": "integer"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "middlename": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual customer",
        "tags": [
          "Customer"
        ]
      },
      "summary": "Operations related to a single customer"
    },
    "/customers/{customer}/addresses": {
      "get": {
        "description": "",
        "operationId": "customerAddressGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "addresses": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "email": "john@test.com",
                                    "first_name": "John",
                                    "gender_id": 5,
                                    "last_name": "Smith",
                                    "middlename": "Allien",
                                    "phone1": 234234234,
                                    "phone2": 234234234,
                                    "title": "mr"
                                  }
                                ],
                                "properties": {
                                  "email": {
                                    "type": "string"
                                  },
                                  "first_name": {
                                    "type": "string"
                                  },
                                  "gender_id": {
                                    "type": "integer"
                                  },
                                  "last_name": {
                                    "type": "string"
                                  },
                                  "middlename": {
                                    "type": "string"
                                  },
                                  "phone1": {
                                    "type": "string"
                                  },
                                  "phone2": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "first_name",
                                  "last_name",
                                  "email"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "media": {
                                    "items": {
                                      "properties": {
                                        "file": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual customer's addresses",
        "tags": [
          "Customer"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the customer model",
          "in": "path",
          "name": "customer",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "summary": "Operations related to a single customer"
    },
    "/emails": {
      "get": {
        "description": "",
        "operationId": "emailList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "html_body": "<b>Hello friend</b>, You are now registered",
                                    "subject": "Welcome to WF",
                                    "text_body": "Hello Friend, you are now registerd"
                                  }
                                ],
                                "properties": {
                                  "html_body": {
                                    "type": "string"
                                  },
                                  "subject": {
                                    "type": "string"
                                  },
                                  "text_body": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "subject",
                                  "html_body"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "hook": "user.created",
                                    "lang": "es",
                                    "slug": "user.created"
                                  }
                                ],
                                "properties": {
                                  "hook": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "hook"
                                ],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all emails",
        "tags": [
          "Notifier"
        ]
      },
      "post": {
        "description": "",
        "operationId": "emailCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "html_body": "<b>Hello friend</b>, You are now registered",
                        "subject": "Welcome to WF",
                        "text_body": "Hello Friend, you are now registerd"
                      }
                    ],
                    "properties": {
                      "html_body": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "text_body": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subject",
                      "html_body"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "hook": "user.created",
                        "lang": "es",
                        "slug": "user.created"
                      }
                    ],
                    "properties": {
                      "hook": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "html_body": "<b>Hello friend</b>, You are now registered",
                              "subject": "Welcome to WF",
                              "text_body": "Hello Friend, you are now registerd"
                            }
                          ],
                          "properties": {
                            "html_body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "text_body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "html_body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New email",
        "tags": [
          "Notifier"
        ]
      },
      "summary": "All basic calls for the emails"
    },
    "/emails/{email}": {
      "delete": {
        "description": "",
        "operationId": "emailDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual email",
        "tags": [
          "Notifier"
        ]
      },
      "get": {
        "description": "",
        "operationId": "emailGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "html_body": "<b>Hello friend</b>, You are now registered",
                              "subject": "Welcome to WF",
                              "text_body": "Hello Friend, you are now registerd"
                            }
                          ],
                          "properties": {
                            "html_body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "text_body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "html_body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual email",
        "tags": [
          "Notifier"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual email",
          "in": "path",
          "name": "email",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "emailUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "html_body": "<b>Hello friend</b>, You are now registered",
                        "subject": "Welcome to WF",
                        "text_body": "Hello Friend, you are now registerd"
                      }
                    ],
                    "properties": {
                      "html_body": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "text_body": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subject",
                      "html_body"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "hook": "user.created",
                        "lang": "es",
                        "slug": "user.created"
                      }
                    ],
                    "properties": {
                      "hook": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "html_body": "<b>Hello friend</b>, You are now registered",
                              "subject": "Welcome to WF",
                              "text_body": "Hello Friend, you are now registerd"
                            }
                          ],
                          "properties": {
                            "html_body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "text_body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "html_body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "Notifier"
        ]
      },
      "summary": "Operations related to a single email"
    },
    "/invoices": {
      "get": {
        "description": "",
        "operationId": "invoiceList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "properties": {
                                  "base_amount": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "discount_amount": {
                                    "type": "number"
                                  },
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "is_company": {
                                    "type": "boolean"
                                  },
                                  "model_id": {
                                    "type": "integer"
                                  },
                                  "model_name": {
                                    "type": "string"
                                  },
                                  "person_id": {
                                    "type": "integer"
                                  },
                                  "status_id": {
                                    "type": "integer"
                                  },
                                  "total_amount": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "base_amount",
                                  "status_id"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "method_id": {
                                    "type": "integer"
                                  },
                                  "tax_amount": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "method_id"
                                ],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all invoices on system",
        "tags": [
          "Payment"
        ]
      },
      "post": {
        "description": "",
        "operationId": "invoiceCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "base_amount": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "discount_amount": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "is_company": {
                        "type": "boolean"
                      },
                      "model_id": {
                        "type": "integer"
                      },
                      "model_name": {
                        "type": "string"
                      },
                      "person_id": {
                        "type": "integer"
                      },
                      "status_id": {
                        "type": "integer"
                      },
                      "total_amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "base_amount",
                      "status_id"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "method_id": {
                        "type": "integer"
                      },
                      "tax_amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "method_id"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "properties": {
                            "base_amount": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "discount_amount": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "is_company": {
                              "type": "boolean"
                            },
                            "model_id": {
                              "type": "integer"
                            },
                            "model_name": {
                              "type": "string"
                            },
                            "person_id": {
                              "type": "integer"
                            },
                            "status_id": {
                              "type": "integer"
                            },
                            "total_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "base_amount",
                            "status_id"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "method_id": {
                              "type": "integer"
                            },
                            "tax_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "method_id"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Person",
        "tags": [
          "Payment"
        ]
      },
      "summary": "Everything related to general invoice related calls"
    },
    "/invoices/{invoice}": {
      "delete": {
        "description": "",
        "operationId": "invoiceDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual invoice",
        "tags": [
          "Payment"
        ]
      },
      "get": {
        "description": "",
        "operationId": "invoiceGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "properties": {
                            "base_amount": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "discount_amount": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "is_company": {
                              "type": "boolean"
                            },
                            "model_id": {
                              "type": "integer"
                            },
                            "model_name": {
                              "type": "string"
                            },
                            "person_id": {
                              "type": "integer"
                            },
                            "status_id": {
                              "type": "integer"
                            },
                            "total_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "base_amount",
                            "status_id"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "method_id": {
                              "type": "integer"
                            },
                            "tax_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "method_id"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual invoice",
        "tags": [
          "Payment"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the invoice model",
          "in": "path",
          "name": "invoice",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "invoiceUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "base_amount": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "discount_amount": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "is_company": {
                        "type": "boolean"
                      },
                      "model_id": {
                        "type": "integer"
                      },
                      "model_name": {
                        "type": "string"
                      },
                      "person_id": {
                        "type": "integer"
                      },
                      "status_id": {
                        "type": "integer"
                      },
                      "total_amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "base_amount",
                      "status_id"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "method_id": {
                        "type": "integer"
                      },
                      "tax_amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "method_id"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual invoice",
        "tags": [
          "Payment"
        ]
      },
      "summary": "Operations related to a single invoice"
    },
    "/menus": {
      "get": {
        "description": "",
        "operationId": "menuList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "extra": {},
                                    "module_name": "base",
                                    "parent_id": 0,
                                    "slug": "gender",
                                    "title": "Gender"
                                  }
                                ],
                                "properties": {
                                  "extra": {
                                    "items": {},
                                    "type": "array"
                                  },
                                  "module_name": {
                                    "type": "string"
                                  },
                                  "parent_id": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "slug"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "Items": {
                                    "items": {
                                      "properties": {
                                        "class_name": {
                                          "type": "string"
                                        },
                                        "condition": {
                                          "type": "string"
                                        },
                                        "extra": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "link_type": {
                                          "type": "string"
                                        },
                                        "link_value": {
                                          "type": "string"
                                        },
                                        "menu_id": {
                                          "type": "integer"
                                        },
                                        "parent_id": {
                                          "type": "integer"
                                        },
                                        "title": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "menu_id"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all menus on system",
        "tags": [
          "Cms"
        ]
      },
      "post": {
        "description": "",
        "operationId": "menuCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "extra": {},
                        "module_name": "base",
                        "parent_id": 0,
                        "slug": "gender",
                        "title": "Gender"
                      }
                    ],
                    "properties": {
                      "extra": {
                        "items": {},
                        "type": "array"
                      },
                      "module_name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "slug"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "Items": {
                        "items": {
                          "properties": {
                            "class_name": {
                              "type": "string"
                            },
                            "condition": {
                              "type": "string"
                            },
                            "extra": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "link_type": {
                              "type": "string"
                            },
                            "link_value": {
                              "type": "string"
                            },
                            "menu_id": {
                              "type": "integer"
                            },
                            "parent_id": {
                              "type": "integer"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "menu_id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "Items": {
                              "items": {
                                "properties": {
                                  "class_name": {
                                    "type": "string"
                                  },
                                  "condition": {
                                    "type": "string"
                                  },
                                  "extra": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "link_type": {
                                    "type": "string"
                                  },
                                  "link_value": {
                                    "type": "string"
                                  },
                                  "menu_id": {
                                    "type": "integer"
                                  },
                                  "parent_id": {
                                    "type": "integer"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "menu_id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Menu",
        "tags": [
          "Cms"
        ]
      },
      "summary": "Everything related to menus"
    },
    "/menus/{menu}": {
      "delete": {
        "description": "",
        "operationId": "menuDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual menu",
        "tags": [
          "Cms"
        ]
      },
      "get": {
        "description": "",
        "operationId": "menuGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "Items": {
                              "items": {
                                "properties": {
                                  "class_name": {
                                    "type": "string"
                                  },
                                  "condition": {
                                    "type": "string"
                                  },
                                  "extra": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "link_type": {
                                    "type": "string"
                                  },
                                  "link_value": {
                                    "type": "string"
                                  },
                                  "menu_id": {
                                    "type": "integer"
                                  },
                                  "parent_id": {
                                    "type": "integer"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "menu_id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual person",
        "tags": [
          "Cms"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the menu model",
          "in": "path",
          "name": "menu",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "menuUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "extra": {},
                        "module_name": "base",
                        "parent_id": 0,
                        "slug": "gender",
                        "title": "Gender"
                      }
                    ],
                    "properties": {
                      "extra": {
                        "items": {},
                        "type": "array"
                      },
                      "module_name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "slug"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "Items": {
                        "items": {
                          "properties": {
                            "class_name": {
                              "type": "string"
                            },
                            "condition": {
                              "type": "string"
                            },
                            "extra": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "link_type": {
                              "type": "string"
                            },
                            "link_value": {
                              "type": "string"
                            },
                            "menu_id": {
                              "type": "integer"
                            },
                            "parent_id": {
                              "type": "integer"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "menu_id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "extra": {},
                              "module_name": "base",
                              "parent_id": 0,
                              "slug": "gender",
                              "title": "Gender"
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {},
                              "type": "array"
                            },
                            "module_name": {
                              "type": "string"
                            },
                            "parent_id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "Items": {
                              "items": {
                                "properties": {
                                  "class_name": {
                                    "type": "string"
                                  },
                                  "condition": {
                                    "type": "string"
                                  },
                                  "extra": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "link_type": {
                                    "type": "string"
                                  },
                                  "link_value": {
                                    "type": "string"
                                  },
                                  "menu_id": {
                                    "type": "integer"
                                  },
                                  "parent_id": {
                                    "type": "integer"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "menu_id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual menu",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single menu"
    },
    "/moderations": {
      "get": {
        "description": "",
        "operationId": "moderationList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "logs": {
                                "items": {
                                  "properties": {
                                    "details": {
                                      "type": "object"
                                    },
                                    "extra": {
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "original": {
                                "type": "object"
                              },
                              "status_id": {
                                "type": "integer"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all moderations",
        "tags": [
          "Moderation"
        ]
      },
      "post": {
        "description": "",
        "operationId": "moderationCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "logs": {
                    "items": {
                      "properties": {
                        "details": {
                          "type": "object"
                        },
                        "extra": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "original": {
                    "type": "object"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "logs": {
                          "items": {
                            "properties": {
                              "details": {
                                "type": "object"
                              },
                              "extra": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "original": {
                          "type": "object"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New moderation",
        "tags": [
          "Moderation"
        ]
      },
      "summary": "All basic calls for the moderations"
    },
    "/moderations/{moderation}": {
      "delete": {
        "description": "",
        "operationId": "moderationDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual moderation",
        "tags": [
          "Moderation"
        ]
      },
      "get": {
        "description": "",
        "operationId": "moderationGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "logs": {
                          "items": {
                            "properties": {
                              "details": {
                                "type": "object"
                              },
                              "extra": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "original": {
                          "type": "object"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual moderation",
        "tags": [
          "Moderation"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual moderation",
          "in": "path",
          "name": "moderation",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "moderationUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "logs": {
                    "items": {
                      "properties": {
                        "details": {
                          "type": "object"
                        },
                        "extra": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "original": {
                    "type": "object"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "logs": {
                          "items": {
                            "properties": {
                              "details": {
                                "type": "object"
                              },
                              "extra": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "original": {
                          "type": "object"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "Moderation"
        ]
      },
      "summary": "Operations related to a single moderation"
    },
    "/orders": {
      "get": {
        "description": "",
        "operationId": "orderList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "products": [],
                                    "total_amount": 200,
                                    "total_items": 15,
                                    "user_id": 3
                                  }
                                ],
                                "properties": {
                                  "products": {
                                    "items": {
                                      "properties": {
                                        "product_id": {
                                          "type": "integer"
                                        },
                                        "qty": {
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "total_amount": {
                                    "type": "number"
                                  },
                                  "total_items": {
                                    "type": "integer"
                                  },
                                  "user_id": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "status_id": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all orders on system",
        "tags": [
          "Ecommerce"
        ]
      },
      "post": {
        "description": "",
        "operationId": "orderCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "products": [],
                        "total_amount": 200,
                        "total_items": 15,
                        "user_id": 3
                      }
                    ],
                    "properties": {
                      "products": {
                        "items": {
                          "properties": {
                            "product_id": {
                              "type": "integer"
                            },
                            "qty": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_amount": {
                        "type": "number"
                      },
                      "total_items": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "status_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "products": [],
                              "total_amount": 200,
                              "total_items": 15,
                              "user_id": 3
                            }
                          ],
                          "properties": {
                            "products": {
                              "items": {
                                "properties": {
                                  "product_id": {
                                    "type": "integer"
                                  },
                                  "qty": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "total_amount": {
                              "type": "number"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "user_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "status_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Order",
        "tags": [
          "Ecommerce"
        ]
      },
      "summary": "Everything related to orders"
    },
    "/orders/{order}": {
      "delete": {
        "description": "",
        "operationId": "orderDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual order",
        "tags": [
          "Ecommerce"
        ]
      },
      "get": {
        "description": "",
        "operationId": "orderGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "products": [],
                              "total_amount": 200,
                              "total_items": 15,
                              "user_id": 3
                            }
                          ],
                          "properties": {
                            "products": {
                              "items": {
                                "properties": {
                                  "product_id": {
                                    "type": "integer"
                                  },
                                  "qty": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "total_amount": {
                              "type": "number"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "user_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "status_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual person",
        "tags": [
          "Ecommerce"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the order model",
          "in": "path",
          "name": "order",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "orderUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "products": [],
                        "total_amount": 200,
                        "total_items": 15,
                        "user_id": 3
                      }
                    ],
                    "properties": {
                      "products": {
                        "items": {
                          "properties": {
                            "product_id": {
                              "type": "integer"
                            },
                            "qty": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_amount": {
                        "type": "number"
                      },
                      "total_items": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "status_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "products": [],
                              "total_amount": 200,
                              "total_items": 15,
                              "user_id": 3
                            }
                          ],
                          "properties": {
                            "products": {
                              "items": {
                                "properties": {
                                  "product_id": {
                                    "type": "integer"
                                  },
                                  "qty": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "total_amount": {
                              "type": "number"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "user_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "status_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual order",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single order"
    },
    "/pages": {
      "get": {
        "description": "",
        "operationId": "pageList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "body": {
                                "type": "string"
                              },
                              "extra": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "lang": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "integer"
                              },
                              "status_id": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "body",
                              "slug"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all pages on system",
        "tags": [
          "Cms"
        ]
      },
      "post": {
        "description": "",
        "operationId": "pageCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "body": {
                    "type": "string"
                  },
                  "extra": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "body",
                  "slug"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "body": {
                          "type": "string"
                        },
                        "extra": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "lang": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "body",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Page",
        "tags": [
          "Cms"
        ]
      },
      "summary": "Everything related to pages"
    },
    "/pages/{page}": {
      "delete": {
        "description": "",
        "operationId": "pageDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual page",
        "tags": [
          "Cms"
        ]
      },
      "get": {
        "description": "",
        "operationId": "pageGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "body": {
                          "type": "string"
                        },
                        "extra": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "lang": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "body",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual person",
        "tags": [
          "Cms"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the page model",
          "in": "path",
          "name": "page",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "pageUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "body": {
                    "type": "string"
                  },
                  "extra": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "body",
                  "slug"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "body": {
                          "type": "string"
                        },
                        "extra": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "lang": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "body",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual page",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single page"
    },
    "/payment-records": {
      "get": {
        "description": "",
        "operationId": "paymentRecordsList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "extra": {
                                "type": "object"
                              },
                              "method_id": {
                                "type": "integer"
                              },
                              "status_id": {
                                "type": "integer"
                              },
                              "type_id": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "amount",
                              "type_id",
                              "status_id",
                              "method_id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all payment records on system",
        "tags": [
          "Payment"
        ]
      },
      "post": {
        "description": "",
        "operationId": "paymentRecordCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "extra": {
                    "type": "object"
                  },
                  "method_id": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "type_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "amount",
                  "type_id",
                  "status_id",
                  "method_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "extra": {
                          "type": "object"
                        },
                        "method_id": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "type_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "amount",
                        "type_id",
                        "status_id",
                        "method_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Payment Record",
        "tags": [
          "Payment"
        ]
      },
      "summary": "Everything related to general payment related calls"
    },
    "/payment-records/{payment}": {
      "delete": {
        "description": "",
        "operationId": "paymentRecordDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual person",
        "tags": [
          "Payment"
        ]
      },
      "get": {
        "description": "",
        "operationId": "paymentRecordGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "extra": {
                          "type": "object"
                        },
                        "method_id": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "type_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "amount",
                        "type_id",
                        "status_id",
                        "method_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual payment record",
        "tags": [
          "Payment"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the payment model",
          "in": "path",
          "name": "payment",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "paymentRecordUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "extra": {
                    "type": "object"
                  },
                  "method_id": {
                    "type": "integer"
                  },
                  "status_id": {
                    "type": "integer"
                  },
                  "type_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "amount",
                  "type_id",
                  "status_id",
                  "method_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "extra": {
                          "type": "object"
                        },
                        "method_id": {
                          "type": "integer"
                        },
                        "status_id": {
                          "type": "integer"
                        },
                        "type_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "amount",
                        "type_id",
                        "status_id",
                        "method_id"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual person",
        "tags": [
          "Payment"
        ]
      },
      "summary": "Operations related to a single payment"
    },
    "/permissions": {
      "get": {
        "description": "",
        "operationId": "permissionList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "guard_name": "*",
                                "name": "create.user"
                              }
                            ],
                            "properties": {
                              "guard_name": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "guard_name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all permissions",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "",
        "operationId": "permissionCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "guard_name": "*",
                    "name": "create.user"
                  }
                ],
                "properties": {
                  "guard_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "guard_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "guard_name": "*",
                          "name": "create.user"
                        }
                      ],
                      "properties": {
                        "guard_name": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "guard_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New permission",
        "tags": [
          "User"
        ]
      },
      "summary": "All basic calls for the permissions"
    },
    "/permissions/{permission}": {
      "delete": {
        "description": "",
        "operationId": "permissionDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual permission",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "",
        "operationId": "permissionGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "guard_name": "*",
                          "name": "create.user"
                        }
                      ],
                      "properties": {
                        "guard_name": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "guard_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual permission",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual permission",
          "in": "path",
          "name": "permission",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "permissionUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "guard_name": "*",
                    "name": "create.user"
                  }
                ],
                "properties": {
                  "guard_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "guard_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "guard_name": "*",
                          "name": "create.user"
                        }
                      ],
                      "properties": {
                        "guard_name": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "guard_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "User"
        ]
      },
      "summary": "Operations related to a single permission"
    },
    "/persons": {
      "get": {
        "description": "",
        "operationId": "personList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "email": "john@test.com",
                                    "first_name": "John",
                                    "gender_id": 5,
                                    "last_name": "Smith",
                                    "middlename": "Allien",
                                    "phone1": 234234234,
                                    "phone2": 234234234,
                                    "title": "mr"
                                  }
                                ],
                                "properties": {
                                  "email": {
                                    "type": "string"
                                  },
                                  "first_name": {
                                    "type": "string"
                                  },
                                  "gender_id": {
                                    "type": "integer"
                                  },
                                  "last_name": {
                                    "type": "string"
                                  },
                                  "middlename": {
                                    "type": "string"
                                  },
                                  "phone1": {
                                    "type": "string"
                                  },
                                  "phone2": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "first_name",
                                  "last_name",
                                  "email"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "media": {
                                    "items": {
                                      "properties": {
                                        "file": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all persons on system",
        "tags": [
          "Entity"
        ]
      },
      "post": {
        "description": "",
        "operationId": "personCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "email": "john@test.com",
                        "first_name": "John",
                        "gender_id": 5,
                        "last_name": "Smith",
                        "middlename": "Allien",
                        "phone1": 234234234,
                        "phone2": 234234234,
                        "title": "mr"
                      }
                    ],
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "gender_id": {
                        "type": "integer"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "middlename": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Person",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Everything related to general person related calls"
    },
    "/persons/{person}": {
      "delete": {
        "description": "",
        "operationId": "personDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual person",
        "tags": [
          "Entity"
        ]
      },
      "get": {
        "description": "",
        "operationId": "personGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual person",
        "tags": [
          "Entity"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the person model",
          "in": "path",
          "name": "person",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "personUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "email": "john@test.com",
                        "first_name": "John",
                        "gender_id": 5,
                        "last_name": "Smith",
                        "middlename": "Allien",
                        "phone1": 234234234,
                        "phone2": 234234234,
                        "title": "mr"
                      }
                    ],
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "gender_id": {
                        "type": "integer"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "middlename": {
                        "type": "string"
                      },
                      "phone1": {
                        "type": "string"
                      },
                      "phone2": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "email": "john@test.com",
                              "first_name": "John",
                              "gender_id": 5,
                              "last_name": "Smith",
                              "middlename": "Allien",
                              "phone1": 234234234,
                              "phone2": 234234234,
                              "title": "mr"
                            }
                          ],
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "gender_id": {
                              "type": "integer"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "middlename": {
                              "type": "string"
                            },
                            "phone1": {
                              "type": "string"
                            },
                            "phone2": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "first_name",
                            "last_name",
                            "email"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual person",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single person"
    },
    "/place-order": {
      "post": {
        "description": "",
        "operationId": "orderPlacement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "products": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "billing_addr": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "customer": {
                          "allOf": [
                            {
                              "example": [
                                {
                                  "email": "john@test.com",
                                  "first_name": "John",
                                  "gender_id": 5,
                                  "last_name": "Smith",
                                  "middlename": "Allien",
                                  "phone1": 234234234,
                                  "phone2": 234234234,
                                  "title": "mr"
                                }
                              ],
                              "properties": {
                                "email": {
                                  "type": "string"
                                },
                                "first_name": {
                                  "type": "string"
                                },
                                "gender_id": {
                                  "type": "integer"
                                },
                                "last_name": {
                                  "type": "string"
                                },
                                "middlename": {
                                  "type": "string"
                                },
                                "phone1": {
                                  "type": "string"
                                },
                                "phone2": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "title",
                                "first_name",
                                "last_name",
                                "email"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "media": {
                                  "items": {
                                    "properties": {
                                      "file": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "products": {
                          "items": {
                            "properties": {
                              "attributes": {
                                "properties": {
                                  "slug": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "media": {
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pricing": {
                                "properties": {
                                  "currency": {
                                    "type": "number"
                                  },
                                  "current": {
                                    "type": "number"
                                  },
                                  "original": {
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "product_id": {
                                "type": "integer"
                              },
                              "qty": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "total_price": {
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "ship_addr": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "shipment_method": {
                          "properties": {
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "totals": {
                          "properties": {
                            "discount": {
                              "type": "number"
                            },
                            "shiping": {
                              "type": "number"
                            },
                            "sub_total": {
                              "type": "number"
                            },
                            "tax": {
                              "type": "number"
                            },
                            "total": {
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create an order",
        "tags": [
          "Ecommerce"
        ]
      },
      "summary": "Place order from frontend"
    },
    "/product-attributes": {
      "get": {
        "description": "",
        "operationId": "productattrList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "description": "Write something to describe",
                                    "lang": "en",
                                    "title": "Some Title"
                                  }
                                ],
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "category_id": 4,
                                    "help": "You can provide color",
                                    "is_required": false,
                                    "is_unique": true,
                                    "type_id": 1,
                                    "validate_type_id": 3
                                  }
                                ],
                                "properties": {
                                  "category_id": {
                                    "type": "integer"
                                  },
                                  "help": {
                                    "type": "string"
                                  },
                                  "is_required": {
                                    "type": "boolean"
                                  },
                                  "is_unique": {
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "items": {
                                      "properties": {
                                        "title": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "type_id": {
                                    "type": "integer"
                                  },
                                  "validate_extra": {
                                    "type": "object"
                                  },
                                  "validate_type_id": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all product-attributes on system",
        "tags": [
          "ProductAttributes"
        ]
      },
      "post": {
        "description": "",
        "operationId": "productattrCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "category_id": 4,
                        "help": "You can provide color",
                        "is_required": false,
                        "is_unique": true,
                        "type_id": 1,
                        "validate_type_id": 3
                      }
                    ],
                    "properties": {
                      "category_id": {
                        "type": "integer"
                      },
                      "help": {
                        "type": "string"
                      },
                      "is_required": {
                        "type": "boolean"
                      },
                      "is_unique": {
                        "type": "boolean"
                      },
                      "options": {
                        "items": {
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type_id": {
                        "type": "integer"
                      },
                      "validate_extra": {
                        "type": "object"
                      },
                      "validate_type_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": 4,
                              "help": "You can provide color",
                              "is_required": false,
                              "is_unique": true,
                              "type_id": 1,
                              "validate_type_id": 3
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "help": {
                              "type": "string"
                            },
                            "is_required": {
                              "type": "boolean"
                            },
                            "is_unique": {
                              "type": "boolean"
                            },
                            "options": {
                              "items": {
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type_id": {
                              "type": "integer"
                            },
                            "validate_extra": {
                              "type": "object"
                            },
                            "validate_type_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Product Attribute",
        "tags": [
          "ProductAttributes"
        ]
      },
      "summary": "Everything related to general productattr related calls"
    },
    "/product-attributes/{productattr}": {
      "delete": {
        "description": "",
        "operationId": "productattrDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual productattr",
        "tags": [
          "ProductAttributes"
        ]
      },
      "get": {
        "description": "",
        "operationId": "productattrGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": 4,
                              "help": "You can provide color",
                              "is_required": false,
                              "is_unique": true,
                              "type_id": 1,
                              "validate_type_id": 3
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "help": {
                              "type": "string"
                            },
                            "is_required": {
                              "type": "boolean"
                            },
                            "is_unique": {
                              "type": "boolean"
                            },
                            "options": {
                              "items": {
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type_id": {
                              "type": "integer"
                            },
                            "validate_extra": {
                              "type": "object"
                            },
                            "validate_type_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual productattr",
        "tags": [
          "ProductAttributes"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the productattr model",
          "in": "path",
          "name": "productattr",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "productattrUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "category_id": 4,
                        "help": "You can provide color",
                        "is_required": false,
                        "is_unique": true,
                        "type_id": 1,
                        "validate_type_id": 3
                      }
                    ],
                    "properties": {
                      "category_id": {
                        "type": "integer"
                      },
                      "help": {
                        "type": "string"
                      },
                      "is_required": {
                        "type": "boolean"
                      },
                      "is_unique": {
                        "type": "boolean"
                      },
                      "options": {
                        "items": {
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type_id": {
                        "type": "integer"
                      },
                      "validate_extra": {
                        "type": "object"
                      },
                      "validate_type_id": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": 4,
                              "help": "You can provide color",
                              "is_required": false,
                              "is_unique": true,
                              "type_id": 1,
                              "validate_type_id": 3
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "help": {
                              "type": "string"
                            },
                            "is_required": {
                              "type": "boolean"
                            },
                            "is_unique": {
                              "type": "boolean"
                            },
                            "options": {
                              "items": {
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type_id": {
                              "type": "integer"
                            },
                            "validate_extra": {
                              "type": "object"
                            },
                            "validate_type_id": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual productattr",
        "tags": [
          "ProductAttributes"
        ]
      },
      "summary": "Operations related to a single productattr"
    },
    "/products": {
      "get": {
        "description": "",
        "operationId": "productList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "description": "Write something to describe",
                                    "lang": "en",
                                    "title": "Some Title"
                                  }
                                ],
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "category_id": "Please check the package now",
                                    "extra": [],
                                    "short_description": "anything short",
                                    "sku": 35542340135323,
                                    "type_id": 3
                                  }
                                ],
                                "properties": {
                                  "category_id": {
                                    "type": "integer"
                                  },
                                  "extra": {
                                    "items": {
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "short_description": {
                                    "type": "string"
                                  },
                                  "sku": {
                                    "type": "string"
                                  },
                                  "type_id": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "category_id",
                                  "type_id",
                                  "sku"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "cost": 12,
                                    "currency": "usd",
                                    "current": 15,
                                    "original": 20
                                  }
                                ],
                                "properties": {
                                  "cost": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "current": {
                                    "type": "number"
                                  },
                                  "original": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "original"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "media": {
                                    "items": {
                                      "properties": {
                                        "file": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all products on system",
        "tags": [
          "Product"
        ]
      },
      "post": {
        "description": "",
        "operationId": "productCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "category_id": "Please check the package now",
                        "extra": [],
                        "short_description": "anything short",
                        "sku": 35542340135323,
                        "type_id": 3
                      }
                    ],
                    "properties": {
                      "category_id": {
                        "type": "integer"
                      },
                      "extra": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "short_description": {
                        "type": "string"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "type_id": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "category_id",
                      "type_id",
                      "sku"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "cost": 12,
                        "currency": "usd",
                        "current": 15,
                        "original": 20
                      }
                    ],
                    "properties": {
                      "cost": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "current": {
                        "type": "number"
                      },
                      "original": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "original"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": "Please check the package now",
                              "extra": [],
                              "short_description": "anything short",
                              "sku": 35542340135323,
                              "type_id": 3
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "extra": {
                              "items": {
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "short_description": {
                              "type": "string"
                            },
                            "sku": {
                              "type": "string"
                            },
                            "type_id": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "category_id",
                            "type_id",
                            "sku"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "cost": 12,
                              "currency": "usd",
                              "current": 15,
                              "original": 20
                            }
                          ],
                          "properties": {
                            "cost": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "current": {
                              "type": "number"
                            },
                            "original": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "original"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Product",
        "tags": [
          "Product"
        ]
      },
      "summary": "Everything related to products"
    },
    "/products/{product}": {
      "delete": {
        "description": "",
        "operationId": "productDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual product",
        "tags": [
          "Product"
        ]
      },
      "get": {
        "description": "",
        "operationId": "productGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": "Please check the package now",
                              "extra": [],
                              "short_description": "anything short",
                              "sku": 35542340135323,
                              "type_id": 3
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "extra": {
                              "items": {
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "short_description": {
                              "type": "string"
                            },
                            "sku": {
                              "type": "string"
                            },
                            "type_id": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "category_id",
                            "type_id",
                            "sku"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "cost": 12,
                              "currency": "usd",
                              "current": 15,
                              "original": 20
                            }
                          ],
                          "properties": {
                            "cost": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "current": {
                              "type": "number"
                            },
                            "original": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "original"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual person",
        "tags": [
          "Product"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the product model",
          "in": "path",
          "name": "product",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "productUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "category_id": "Please check the package now",
                        "extra": [],
                        "short_description": "anything short",
                        "sku": 35542340135323,
                        "type_id": 3
                      }
                    ],
                    "properties": {
                      "category_id": {
                        "type": "integer"
                      },
                      "extra": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "short_description": {
                        "type": "string"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "type_id": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "category_id",
                      "type_id",
                      "sku"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "cost": 12,
                        "currency": "usd",
                        "current": 15,
                        "original": 20
                      }
                    ],
                    "properties": {
                      "cost": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "current": {
                        "type": "number"
                      },
                      "original": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "original"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": "Please check the package now",
                              "extra": [],
                              "short_description": "anything short",
                              "sku": 35542340135323,
                              "type_id": 3
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "extra": {
                              "items": {
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "short_description": {
                              "type": "string"
                            },
                            "sku": {
                              "type": "string"
                            },
                            "type_id": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "category_id",
                            "type_id",
                            "sku"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "cost": 12,
                              "currency": "usd",
                              "current": 15,
                              "original": 20
                            }
                          ],
                          "properties": {
                            "cost": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "current": {
                              "type": "number"
                            },
                            "original": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "original"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual product",
        "tags": [
          "Entity"
        ]
      },
      "summary": "Operations related to a single product"
    },
    "/public/cart": {
      "get": {
        "description": "",
        "operationId": "cardGet",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "products": [],
                      "total_amount": 200,
                      "total_items": 15,
                      "user_id": 3
                    }
                  ],
                  "properties": {
                    "products": {
                      "items": {
                        "properties": {
                          "product_id": {
                            "type": "integer"
                          },
                          "qty": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_amount": {
                      "type": "number"
                    },
                    "total_items": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all products on system",
        "tags": [
          "Ecommerce"
        ]
      },
      "post": {
        "description": "",
        "operationId": "cartAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attributes": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "qty": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "products": [],
                      "total_amount": 200,
                      "total_items": 15,
                      "user_id": 3
                    }
                  ],
                  "properties": {
                    "products": {
                      "items": {
                        "properties": {
                          "product_id": {
                            "type": "integer"
                          },
                          "qty": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_amount": {
                      "type": "number"
                    },
                    "total_items": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Add Item to Cart",
        "tags": [
          "Ecommerce"
        ]
      },
      "summary": "Operations related to user's cart"
    },
    "/public/cart-shipment": {
      "post": {
        "description": "",
        "operationId": "cartShipment",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "billing_addr": {
                        "example": [
                          {
                            "addr1": "Apr 4, Floo3",
                            "addr2": "White hall road",
                            "city": "Sialkot",
                            "country": "PK",
                            "lat": 23,
                            "lng": 32.23,
                            "state": "Punjab",
                            "zip_code": 51310
                          }
                        ],
                        "properties": {
                          "addr1": {
                            "type": "string"
                          },
                          "addr2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "lat": {
                            "type": "string"
                          },
                          "lng": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "addr1",
                          "city",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "billing_id": {
                        "type": "integer"
                      },
                      "customer": {
                        "allOf": [
                          {
                            "example": [
                              {
                                "email": "john@test.com",
                                "first_name": "John",
                                "gender_id": 5,
                                "last_name": "Smith",
                                "middlename": "Allien",
                                "phone1": 234234234,
                                "phone2": 234234234,
                                "title": "mr"
                              }
                            ],
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "gender_id": {
                                "type": "integer"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "middlename": {
                                "type": "string"
                              },
                              "phone1": {
                                "type": "string"
                              },
                              "phone2": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "first_name",
                              "last_name",
                              "email"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "media": {
                                "items": {
                                  "properties": {
                                    "file": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "customer_id": {
                        "type": "integer"
                      },
                      "ship_addr": {
                        "example": [
                          {
                            "addr1": "Apr 4, Floo3",
                            "addr2": "White hall road",
                            "city": "Sialkot",
                            "country": "PK",
                            "lat": 23,
                            "lng": 32.23,
                            "state": "Punjab",
                            "zip_code": 51310
                          }
                        ],
                        "properties": {
                          "addr1": {
                            "type": "string"
                          },
                          "addr2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "lat": {
                            "type": "string"
                          },
                          "lng": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "addr1",
                          "city",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "ship_id": {
                        "type": "integer"
                      },
                      "shipment_method": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "billing_addr": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "customer": {
                          "allOf": [
                            {
                              "example": [
                                {
                                  "email": "john@test.com",
                                  "first_name": "John",
                                  "gender_id": 5,
                                  "last_name": "Smith",
                                  "middlename": "Allien",
                                  "phone1": 234234234,
                                  "phone2": 234234234,
                                  "title": "mr"
                                }
                              ],
                              "properties": {
                                "email": {
                                  "type": "string"
                                },
                                "first_name": {
                                  "type": "string"
                                },
                                "gender_id": {
                                  "type": "integer"
                                },
                                "last_name": {
                                  "type": "string"
                                },
                                "middlename": {
                                  "type": "string"
                                },
                                "phone1": {
                                  "type": "string"
                                },
                                "phone2": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "title",
                                "first_name",
                                "last_name",
                                "email"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "media": {
                                  "items": {
                                    "properties": {
                                      "file": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "products": {
                          "items": {
                            "properties": {
                              "attributes": {
                                "properties": {
                                  "slug": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "media": {
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pricing": {
                                "properties": {
                                  "currency": {
                                    "type": "number"
                                  },
                                  "current": {
                                    "type": "number"
                                  },
                                  "original": {
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "product_id": {
                                "type": "integer"
                              },
                              "qty": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "total_price": {
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "ship_addr": {
                          "example": [
                            {
                              "addr1": "Apr 4, Floo3",
                              "addr2": "White hall road",
                              "city": "Sialkot",
                              "country": "PK",
                              "lat": 23,
                              "lng": 32.23,
                              "state": "Punjab",
                              "zip_code": 51310
                            }
                          ],
                          "properties": {
                            "addr1": {
                              "type": "string"
                            },
                            "addr2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "lat": {
                              "type": "string"
                            },
                            "lng": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "addr1",
                            "city",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "shipment_method": {
                          "properties": {
                            "slug": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "totals": {
                          "properties": {
                            "discount": {
                              "type": "number"
                            },
                            "shiping": {
                              "type": "number"
                            },
                            "sub_total": {
                              "type": "number"
                            },
                            "tax": {
                              "type": "number"
                            },
                            "total": {
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create Shipment",
        "tags": [
          "Ecommerce"
        ]
      },
      "summary": "Operations related to user's cart"
    },
    "/public/trans/{language}/{category-slug}": {
      "get": {
        "description": "",
        "operationId": "transGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "slug": {
                      "description": "The slug of phrase",
                      "example": "Translation String",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get set of translations with targetting category as an option",
        "tags": [
          "Base"
        ]
      },
      "parameters": [
        {
          "description": "2 character iso code for language",
          "in": "path",
          "name": "language",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Optional Slug of category for which phrases needs to be retreived",
          "in": "path",
          "name": "category-slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "summary": "Operations related to a single phrase"
    },
    "/push-notifications": {
      "get": {
        "description": "",
        "operationId": "pushList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "extra": {},
                                "module_name": "base",
                                "parent_id": 0,
                                "slug": "gender",
                                "title": "Gender"
                              }
                            ],
                            "properties": {
                              "extra": {
                                "items": {},
                                "type": "array"
                              },
                              "module_name": {
                                "type": "string"
                              },
                              "parent_id": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "slug"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all push-notifications",
        "tags": [
          "Notifier"
        ]
      },
      "post": {
        "description": "",
        "operationId": "pushCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "body": "The desired item is deleted",
                        "subject": "Item Deleted"
                      }
                    ],
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subject",
                      "body"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "hook": "user.created",
                        "lang": "es",
                        "slug": "user.created"
                      }
                    ],
                    "properties": {
                      "hook": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New push-notification",
        "tags": [
          "Notifier"
        ]
      },
      "summary": "All basic calls for the push-notifications"
    },
    "/push-notifications/{pushnotification}": {
      "delete": {
        "description": "",
        "operationId": "pushDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual push-notification",
        "tags": [
          "Notifier"
        ]
      },
      "get": {
        "description": "",
        "operationId": "pushGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual push-notification",
        "tags": [
          "Notifier"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual push-notification",
          "in": "path",
          "name": "pushnotification",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "pushUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "body": "The desired item is deleted",
                        "subject": "Item Deleted"
                      }
                    ],
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subject",
                      "body"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "hook": "user.created",
                        "lang": "es",
                        "slug": "user.created"
                      }
                    ],
                    "properties": {
                      "hook": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "Notifier"
        ]
      },
      "summary": "Operations related to a single push-notification"
    },
    "/quotes": {
      "get": {
        "description": "",
        "operationId": "quoteList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "properties": {
                                  "base_amount": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "discount_amount": {
                                    "type": "number"
                                  },
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "is_company": {
                                    "type": "boolean"
                                  },
                                  "model_id": {
                                    "type": "integer"
                                  },
                                  "model_name": {
                                    "type": "string"
                                  },
                                  "person_id": {
                                    "type": "integer"
                                  },
                                  "status_id": {
                                    "type": "integer"
                                  },
                                  "total_amount": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "base_amount",
                                  "status_id"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "items": {
                                    "example": [
                                      {
                                        "discount": 10.2,
                                        "qty": 5,
                                        "quote_id": 10,
                                        "quote_type": "invoice",
                                        "unit_price": 53.32
                                      }
                                    ],
                                    "properties": {
                                      "discount": {
                                        "type": "number"
                                      },
                                      "qty": {
                                        "type": "integer"
                                      },
                                      "quote_id": {
                                        "type": "integer"
                                      },
                                      "quote_type": {
                                        "type": "string"
                                      },
                                      "unit_price": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "quote_type",
                                      "quote_id",
                                      "unit_price"
                                    ],
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all quotes on system",
        "tags": [
          "Quote"
        ]
      },
      "post": {
        "description": "",
        "operationId": "quoteCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "base_amount": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "discount_amount": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "is_company": {
                        "type": "boolean"
                      },
                      "model_id": {
                        "type": "integer"
                      },
                      "model_name": {
                        "type": "string"
                      },
                      "person_id": {
                        "type": "integer"
                      },
                      "status_id": {
                        "type": "integer"
                      },
                      "total_amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "base_amount",
                      "status_id"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "items": {
                        "example": [
                          {
                            "discount": 10.2,
                            "qty": 5,
                            "quote_id": 10,
                            "quote_type": "invoice",
                            "unit_price": 53.32
                          }
                        ],
                        "properties": {
                          "discount": {
                            "type": "number"
                          },
                          "qty": {
                            "type": "integer"
                          },
                          "quote_id": {
                            "type": "integer"
                          },
                          "quote_type": {
                            "type": "string"
                          },
                          "unit_price": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "quote_type",
                          "quote_id",
                          "unit_price"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "properties": {
                            "base_amount": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "discount_amount": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "is_company": {
                              "type": "boolean"
                            },
                            "model_id": {
                              "type": "integer"
                            },
                            "model_name": {
                              "type": "string"
                            },
                            "person_id": {
                              "type": "integer"
                            },
                            "status_id": {
                              "type": "integer"
                            },
                            "total_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "base_amount",
                            "status_id"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "items": {
                              "example": [
                                {
                                  "discount": 10.2,
                                  "qty": 5,
                                  "quote_id": 10,
                                  "quote_type": "invoice",
                                  "unit_price": 53.32
                                }
                              ],
                              "properties": {
                                "discount": {
                                  "type": "number"
                                },
                                "qty": {
                                  "type": "integer"
                                },
                                "quote_id": {
                                  "type": "integer"
                                },
                                "quote_type": {
                                  "type": "string"
                                },
                                "unit_price": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "quote_type",
                                "quote_id",
                                "unit_price"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Quote",
        "tags": [
          "Quote"
        ]
      },
      "summary": "Everything related to general quote related calls"
    },
    "/quotes/{quote}": {
      "delete": {
        "description": "",
        "operationId": "quoteDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual quote",
        "tags": [
          "Quote"
        ]
      },
      "get": {
        "description": "",
        "operationId": "quoteGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "properties": {
                            "base_amount": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "discount_amount": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "is_company": {
                              "type": "boolean"
                            },
                            "model_id": {
                              "type": "integer"
                            },
                            "model_name": {
                              "type": "string"
                            },
                            "person_id": {
                              "type": "integer"
                            },
                            "status_id": {
                              "type": "integer"
                            },
                            "total_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "base_amount",
                            "status_id"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "items": {
                              "example": [
                                {
                                  "discount": 10.2,
                                  "qty": 5,
                                  "quote_id": 10,
                                  "quote_type": "invoice",
                                  "unit_price": 53.32
                                }
                              ],
                              "properties": {
                                "discount": {
                                  "type": "number"
                                },
                                "qty": {
                                  "type": "integer"
                                },
                                "quote_id": {
                                  "type": "integer"
                                },
                                "quote_type": {
                                  "type": "string"
                                },
                                "unit_price": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "quote_type",
                                "quote_id",
                                "unit_price"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual quote",
        "tags": [
          "Quote"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the quote model",
          "in": "path",
          "name": "quote",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "quoteUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "base_amount": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "discount_amount": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "is_company": {
                        "type": "boolean"
                      },
                      "model_id": {
                        "type": "integer"
                      },
                      "model_name": {
                        "type": "string"
                      },
                      "person_id": {
                        "type": "integer"
                      },
                      "status_id": {
                        "type": "integer"
                      },
                      "total_amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "base_amount",
                      "status_id"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "items": {
                        "example": [
                          {
                            "discount": 10.2,
                            "qty": 5,
                            "quote_id": 10,
                            "quote_type": "invoice",
                            "unit_price": 53.32
                          }
                        ],
                        "properties": {
                          "discount": {
                            "type": "number"
                          },
                          "qty": {
                            "type": "integer"
                          },
                          "quote_id": {
                            "type": "integer"
                          },
                          "quote_type": {
                            "type": "string"
                          },
                          "unit_price": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "quote_type",
                          "quote_id",
                          "unit_price"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "properties": {
                            "base_amount": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "discount_amount": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "is_company": {
                              "type": "boolean"
                            },
                            "model_id": {
                              "type": "integer"
                            },
                            "model_name": {
                              "type": "string"
                            },
                            "person_id": {
                              "type": "integer"
                            },
                            "status_id": {
                              "type": "integer"
                            },
                            "total_amount": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "base_amount",
                            "status_id"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "items": {
                              "example": [
                                {
                                  "discount": 10.2,
                                  "qty": 5,
                                  "quote_id": 10,
                                  "quote_type": "invoice",
                                  "unit_price": 53.32
                                }
                              ],
                              "properties": {
                                "discount": {
                                  "type": "number"
                                },
                                "qty": {
                                  "type": "integer"
                                },
                                "quote_id": {
                                  "type": "integer"
                                },
                                "quote_type": {
                                  "type": "string"
                                },
                                "unit_price": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "quote_type",
                                "quote_id",
                                "unit_price"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual quote",
        "tags": [
          "Quote"
        ]
      },
      "summary": "Operations related to a single quote"
    },
    "/recurring-profile": {
      "get": {
        "description": "",
        "operationId": "recurringProfileList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "properties": {
                                      "base_amount": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string"
                                      },
                                      "discount_amount": {
                                        "type": "number"
                                      },
                                      "identifier": {
                                        "type": "string"
                                      },
                                      "is_company": {
                                        "type": "boolean"
                                      },
                                      "model_id": {
                                        "type": "integer"
                                      },
                                      "model_name": {
                                        "type": "string"
                                      },
                                      "person_id": {
                                        "type": "integer"
                                      },
                                      "status_id": {
                                        "type": "integer"
                                      },
                                      "total_amount": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "base_amount",
                                      "status_id"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "properties": {
                                      "method_id": {
                                        "type": "integer"
                                      },
                                      "tax_amount": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "method_id"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              },
                              {
                                "properties": {
                                  "duration_unit": {
                                    "type": "integer"
                                  },
                                  "duration_value": {
                                    "type": "integer"
                                  },
                                  "repetition_times": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all recurring profiles on system",
        "tags": [
          "Payment"
        ]
      },
      "post": {
        "description": "",
        "operationId": "recurringProfileCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "properties": {
                          "base_amount": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "discount_amount": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "is_company": {
                            "type": "boolean"
                          },
                          "model_id": {
                            "type": "integer"
                          },
                          "model_name": {
                            "type": "string"
                          },
                          "person_id": {
                            "type": "integer"
                          },
                          "status_id": {
                            "type": "integer"
                          },
                          "total_amount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "base_amount",
                          "status_id"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "method_id": {
                            "type": "integer"
                          },
                          "tax_amount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "method_id"
                        ],
                        "type": "object"
                      }
                    ]
                  },
                  {
                    "properties": {
                      "duration_unit": {
                        "type": "integer"
                      },
                      "duration_value": {
                        "type": "integer"
                      },
                      "repetition_times": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "properties": {
                                "base_amount": {
                                  "type": "number"
                                },
                                "currency": {
                                  "type": "string"
                                },
                                "discount_amount": {
                                  "type": "number"
                                },
                                "identifier": {
                                  "type": "string"
                                },
                                "is_company": {
                                  "type": "boolean"
                                },
                                "model_id": {
                                  "type": "integer"
                                },
                                "model_name": {
                                  "type": "string"
                                },
                                "person_id": {
                                  "type": "integer"
                                },
                                "status_id": {
                                  "type": "integer"
                                },
                                "total_amount": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "base_amount",
                                "status_id"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "method_id": {
                                  "type": "integer"
                                },
                                "tax_amount": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "method_id"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        {
                          "properties": {
                            "duration_unit": {
                              "type": "integer"
                            },
                            "duration_value": {
                              "type": "integer"
                            },
                            "repetition_times": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Recurring Profile",
        "tags": [
          "Payment"
        ]
      },
      "summary": "Everything related to recurring profiles"
    },
    "/recurring-profile/{recurring_profile}": {
      "delete": {
        "description": "",
        "operationId": "recurringProfileGetDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual Recurring Profile",
        "tags": [
          "Payment"
        ]
      },
      "get": {
        "description": "",
        "operationId": "recurringProfileGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "properties": {
                                "base_amount": {
                                  "type": "number"
                                },
                                "currency": {
                                  "type": "string"
                                },
                                "discount_amount": {
                                  "type": "number"
                                },
                                "identifier": {
                                  "type": "string"
                                },
                                "is_company": {
                                  "type": "boolean"
                                },
                                "model_id": {
                                  "type": "integer"
                                },
                                "model_name": {
                                  "type": "string"
                                },
                                "person_id": {
                                  "type": "integer"
                                },
                                "status_id": {
                                  "type": "integer"
                                },
                                "total_amount": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "base_amount",
                                "status_id"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "method_id": {
                                  "type": "integer"
                                },
                                "tax_amount": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "method_id"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        {
                          "properties": {
                            "duration_unit": {
                              "type": "integer"
                            },
                            "duration_value": {
                              "type": "integer"
                            },
                            "repetition_times": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual Recurring Profile",
        "tags": [
          "Payment"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the invoice model",
          "in": "path",
          "name": "recurring_profile",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "recurringProfileUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "properties": {
                          "base_amount": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "discount_amount": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "is_company": {
                            "type": "boolean"
                          },
                          "model_id": {
                            "type": "integer"
                          },
                          "model_name": {
                            "type": "string"
                          },
                          "person_id": {
                            "type": "integer"
                          },
                          "status_id": {
                            "type": "integer"
                          },
                          "total_amount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "base_amount",
                          "status_id"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "method_id": {
                            "type": "integer"
                          },
                          "tax_amount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "method_id"
                        ],
                        "type": "object"
                      }
                    ]
                  },
                  {
                    "properties": {
                      "duration_unit": {
                        "type": "integer"
                      },
                      "duration_value": {
                        "type": "integer"
                      },
                      "repetition_times": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "properties": {
                                "base_amount": {
                                  "type": "number"
                                },
                                "currency": {
                                  "type": "string"
                                },
                                "discount_amount": {
                                  "type": "number"
                                },
                                "identifier": {
                                  "type": "string"
                                },
                                "is_company": {
                                  "type": "boolean"
                                },
                                "model_id": {
                                  "type": "integer"
                                },
                                "model_name": {
                                  "type": "string"
                                },
                                "person_id": {
                                  "type": "integer"
                                },
                                "status_id": {
                                  "type": "integer"
                                },
                                "total_amount": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "base_amount",
                                "status_id"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "method_id": {
                                  "type": "integer"
                                },
                                "tax_amount": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "method_id"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        {
                          "properties": {
                            "duration_unit": {
                              "type": "integer"
                            },
                            "duration_value": {
                              "type": "integer"
                            },
                            "repetition_times": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual Recurring Profile",
        "tags": [
          "Payment"
        ]
      },
      "summary": "Operations related to a single invoice"
    },
    "/roles": {
      "get": {
        "description": "",
        "operationId": "rolesList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "guard_name": "testing123",
                                "name": "admin",
                                "permissions": [
                                  1,
                                  5,
                                  10
                                ]
                              }
                            ],
                            "properties": {
                              "guard_name": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "permissions": {
                                "items": {},
                                "type": "array"
                              }
                            },
                            "required": [
                              "name",
                              "guard_name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all roles",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "",
        "operationId": "roleCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "guard_name": "testing123",
                    "name": "admin",
                    "permissions": [
                      1,
                      5,
                      10
                    ]
                  }
                ],
                "properties": {
                  "guard_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "permissions": {
                    "items": {},
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "guard_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "guard_name": "testing123",
                          "name": "admin",
                          "permissions": [
                            1,
                            5,
                            10
                          ]
                        }
                      ],
                      "properties": {
                        "guard_name": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "permissions": {
                          "items": {},
                          "type": "array"
                        }
                      },
                      "required": [
                        "name",
                        "guard_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Role",
        "tags": [
          "User"
        ]
      },
      "summary": "All basic calls for the roles"
    },
    "/roles/{role}": {
      "delete": {
        "description": "",
        "operationId": "roleDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual role",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "",
        "operationId": "roleGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "guard_name": "testing123",
                          "name": "admin",
                          "permissions": [
                            1,
                            5,
                            10
                          ]
                        }
                      ],
                      "properties": {
                        "guard_name": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "permissions": {
                          "items": {},
                          "type": "array"
                        }
                      },
                      "required": [
                        "name",
                        "guard_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual role",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual role",
          "in": "path",
          "name": "role",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "roleUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "guard_name": "testing123",
                    "name": "admin",
                    "permissions": [
                      1,
                      5,
                      10
                    ]
                  }
                ],
                "properties": {
                  "guard_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "permissions": {
                    "items": {},
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "guard_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "guard_name": "testing123",
                          "name": "admin",
                          "permissions": [
                            1,
                            5,
                            10
                          ]
                        }
                      ],
                      "properties": {
                        "guard_name": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "permissions": {
                          "items": {},
                          "type": "array"
                        }
                      },
                      "required": [
                        "name",
                        "guard_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "User"
        ]
      },
      "summary": "Operations related to a single user"
    },
    "/service-orders": {
      "get": {
        "description": "",
        "operationId": "serviceOrderList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "base_amount": 23.34,
                                "currency": "usd",
                                "customer": 5
                              }
                            ],
                            "properties": {
                              "base_amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "customer": {
                                "type": "integer"
                              },
                              "discount": {
                                "type": "number"
                              },
                              "items": {
                                "items": {
                                  "example": [
                                    {
                                      "discount": 23.53,
                                      "qty": 3,
                                      "service_id": 3,
                                      "unit_price": 50.23
                                    }
                                  ],
                                  "properties": {
                                    "discount": {
                                      "type": "number"
                                    },
                                    "qty": {
                                      "type": "integer"
                                    },
                                    "service_id": {
                                      "type": "string"
                                    },
                                    "unit_price": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "service_id",
                                    "unit_price"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status_id": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "currency",
                              "base_amount",
                              "customer",
                              "items"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all service-orders on system",
        "tags": [
          "Service"
        ]
      },
      "post": {
        "description": "",
        "operationId": "serviceOrderCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "base_amount": 23.34,
                    "currency": "usd",
                    "customer": 5
                  }
                ],
                "properties": {
                  "base_amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "customer": {
                    "type": "integer"
                  },
                  "discount": {
                    "type": "number"
                  },
                  "items": {
                    "items": {
                      "example": [
                        {
                          "discount": 23.53,
                          "qty": 3,
                          "service_id": 3,
                          "unit_price": 50.23
                        }
                      ],
                      "properties": {
                        "discount": {
                          "type": "number"
                        },
                        "qty": {
                          "type": "integer"
                        },
                        "service_id": {
                          "type": "string"
                        },
                        "unit_price": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "service_id",
                        "unit_price"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "status_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "currency",
                  "base_amount",
                  "customer",
                  "items"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "base_amount": 23.34,
                          "currency": "usd",
                          "customer": 5
                        }
                      ],
                      "properties": {
                        "base_amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "customer": {
                          "type": "integer"
                        },
                        "discount": {
                          "type": "number"
                        },
                        "items": {
                          "items": {
                            "example": [
                              {
                                "discount": 23.53,
                                "qty": 3,
                                "service_id": 3,
                                "unit_price": 50.23
                              }
                            ],
                            "properties": {
                              "discount": {
                                "type": "number"
                              },
                              "qty": {
                                "type": "integer"
                              },
                              "service_id": {
                                "type": "string"
                              },
                              "unit_price": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "service_id",
                              "unit_price"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "status_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "currency",
                        "base_amount",
                        "customer",
                        "items"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New ServiceOrder",
        "tags": [
          "Service"
        ]
      },
      "summary": "Everything related to general serviceOrder related calls"
    },
    "/service-orders/{serviceOrder}": {
      "delete": {
        "description": "",
        "operationId": "serviceOrderDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual serviceOrder",
        "tags": [
          "Service"
        ]
      },
      "get": {
        "description": "",
        "operationId": "serviceOrderGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "base_amount": 23.34,
                          "currency": "usd",
                          "customer": 5
                        }
                      ],
                      "properties": {
                        "base_amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "customer": {
                          "type": "integer"
                        },
                        "discount": {
                          "type": "number"
                        },
                        "items": {
                          "items": {
                            "example": [
                              {
                                "discount": 23.53,
                                "qty": 3,
                                "service_id": 3,
                                "unit_price": 50.23
                              }
                            ],
                            "properties": {
                              "discount": {
                                "type": "number"
                              },
                              "qty": {
                                "type": "integer"
                              },
                              "service_id": {
                                "type": "string"
                              },
                              "unit_price": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "service_id",
                              "unit_price"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "status_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "currency",
                        "base_amount",
                        "customer",
                        "items"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual serviceOrder",
        "tags": [
          "Service"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the serviceOrder model",
          "in": "path",
          "name": "serviceOrder",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "serviceOrderUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "base_amount": 23.34,
                    "currency": "usd",
                    "customer": 5
                  }
                ],
                "properties": {
                  "base_amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "customer": {
                    "type": "integer"
                  },
                  "discount": {
                    "type": "number"
                  },
                  "items": {
                    "items": {
                      "example": [
                        {
                          "discount": 23.53,
                          "qty": 3,
                          "service_id": 3,
                          "unit_price": 50.23
                        }
                      ],
                      "properties": {
                        "discount": {
                          "type": "number"
                        },
                        "qty": {
                          "type": "integer"
                        },
                        "service_id": {
                          "type": "string"
                        },
                        "unit_price": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "service_id",
                        "unit_price"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "status_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "currency",
                  "base_amount",
                  "customer",
                  "items"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "base_amount": 23.34,
                          "currency": "usd",
                          "customer": 5
                        }
                      ],
                      "properties": {
                        "base_amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "customer": {
                          "type": "integer"
                        },
                        "discount": {
                          "type": "number"
                        },
                        "items": {
                          "items": {
                            "example": [
                              {
                                "discount": 23.53,
                                "qty": 3,
                                "service_id": 3,
                                "unit_price": 50.23
                              }
                            ],
                            "properties": {
                              "discount": {
                                "type": "number"
                              },
                              "qty": {
                                "type": "integer"
                              },
                              "service_id": {
                                "type": "string"
                              },
                              "unit_price": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "service_id",
                              "unit_price"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "status_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "currency",
                        "base_amount",
                        "customer",
                        "items"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual serviceOrder",
        "tags": [
          "Service"
        ]
      },
      "summary": "Operations related to a single serviceOrder"
    },
    "/services": {
      "get": {
        "description": "",
        "operationId": "serviceList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "description": "Write something to describe",
                                    "lang": "en",
                                    "title": "Some Title"
                                  }
                                ],
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "category_id": 5,
                                    "currency": "usd",
                                    "current": 30,
                                    "is_recurring": false,
                                    "original": 34.23,
                                    "price_unit": 5
                                  }
                                ],
                                "properties": {
                                  "category_id": {
                                    "type": "integer"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "current": {
                                    "type": "number"
                                  },
                                  "is_recurring": {
                                    "type": "boolean"
                                  },
                                  "original": {
                                    "type": "number"
                                  },
                                  "price_unit": {
                                    "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "category_id",
                                  "original",
                                  "price_unit"
                                ],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all services on system",
        "tags": [
          "Service"
        ]
      },
      "post": {
        "description": "",
        "operationId": "serviceCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "category_id": 5,
                        "currency": "usd",
                        "current": 30,
                        "is_recurring": false,
                        "original": 34.23,
                        "price_unit": 5
                      }
                    ],
                    "properties": {
                      "category_id": {
                        "type": "integer"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "current": {
                        "type": "number"
                      },
                      "is_recurring": {
                        "type": "boolean"
                      },
                      "original": {
                        "type": "number"
                      },
                      "price_unit": {
                        "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "category_id",
                      "original",
                      "price_unit"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": 5,
                              "currency": "usd",
                              "current": 30,
                              "is_recurring": false,
                              "original": 34.23,
                              "price_unit": 5
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "current": {
                              "type": "number"
                            },
                            "is_recurring": {
                              "type": "boolean"
                            },
                            "original": {
                              "type": "number"
                            },
                            "price_unit": {
                              "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "category_id",
                            "original",
                            "price_unit"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Service",
        "tags": [
          "Service"
        ]
      },
      "summary": "Everything related to general service related calls"
    },
    "/services/{service}": {
      "delete": {
        "description": "",
        "operationId": "serviceDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual service",
        "tags": [
          "Service"
        ]
      },
      "get": {
        "description": "",
        "operationId": "serviceGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": 5,
                              "currency": "usd",
                              "current": 30,
                              "is_recurring": false,
                              "original": 34.23,
                              "price_unit": 5
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "current": {
                              "type": "number"
                            },
                            "is_recurring": {
                              "type": "boolean"
                            },
                            "original": {
                              "type": "number"
                            },
                            "price_unit": {
                              "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "category_id",
                            "original",
                            "price_unit"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual service",
        "tags": [
          "Service"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the service model",
          "in": "path",
          "name": "service",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "serviceUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "category_id": 5,
                        "currency": "usd",
                        "current": 30,
                        "is_recurring": false,
                        "original": 34.23,
                        "price_unit": 5
                      }
                    ],
                    "properties": {
                      "category_id": {
                        "type": "integer"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "current": {
                        "type": "number"
                      },
                      "is_recurring": {
                        "type": "boolean"
                      },
                      "original": {
                        "type": "number"
                      },
                      "price_unit": {
                        "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "category_id",
                      "original",
                      "price_unit"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "category_id": 5,
                              "currency": "usd",
                              "current": 30,
                              "is_recurring": false,
                              "original": 34.23,
                              "price_unit": 5
                            }
                          ],
                          "properties": {
                            "category_id": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "current": {
                              "type": "number"
                            },
                            "is_recurring": {
                              "type": "boolean"
                            },
                            "original": {
                              "type": "number"
                            },
                            "price_unit": {
                              "description": "Fixed, Hourly, Daily, Weekly, Monthly, Per Visit",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "category_id",
                            "original",
                            "price_unit"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual service",
        "tags": [
          "Service"
        ]
      },
      "summary": "Operations related to a single service"
    },
    "/shipping-methods": {
      "get": {
        "description": "",
        "operationId": "shippingMethodList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "description": "Write something to describe",
                                    "lang": "en",
                                    "title": "Some Title"
                                  }
                                ],
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "currency": "usd",
                                    "rate_by": 3,
                                    "slug": "fedex",
                                    "status_id": 7
                                  }
                                ],
                                "properties": {
                                  "currency": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "rate_by": {
                                    "description": "This will decide weather its rate is fixed, product wise or zone wise",
                                    "type": "integer"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "status_id": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title",
                                  "slug",
                                  "rate_by",
                                  "currency"
                                ],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all shipping-methods on system",
        "tags": [
          "Shipping"
        ]
      },
      "post": {
        "description": "",
        "operationId": "shippingMethodCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "currency": "usd",
                        "rate_by": 3,
                        "slug": "fedex",
                        "status_id": 7
                      }
                    ],
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "rate_by": {
                        "description": "This will decide weather its rate is fixed, product wise or zone wise",
                        "type": "integer"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "slug",
                      "rate_by",
                      "currency"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "currency": "usd",
                              "rate_by": 3,
                              "slug": "fedex",
                              "status_id": 7
                            }
                          ],
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "rate_by": {
                              "description": "This will decide weather its rate is fixed, product wise or zone wise",
                              "type": "integer"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status_id": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug",
                            "rate_by",
                            "currency"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New ShippingMethod",
        "tags": [
          "Shipping"
        ]
      },
      "summary": "Everything related to general shippingMethod related calls"
    },
    "/shipping-methods/{shippingMethod}": {
      "delete": {
        "description": "",
        "operationId": "shippingMethodDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual shippingMethod",
        "tags": [
          "Shipping"
        ]
      },
      "get": {
        "description": "",
        "operationId": "shippingMethodGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "currency": "usd",
                              "rate_by": 3,
                              "slug": "fedex",
                              "status_id": 7
                            }
                          ],
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "rate_by": {
                              "description": "This will decide weather its rate is fixed, product wise or zone wise",
                              "type": "integer"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status_id": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug",
                            "rate_by",
                            "currency"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual shippingMethod",
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the shippingMethod model",
          "in": "path",
          "name": "shippingMethod",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "shippingMethodUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "currency": "usd",
                        "rate_by": 3,
                        "slug": "fedex",
                        "status_id": 7
                      }
                    ],
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "rate_by": {
                        "description": "This will decide weather its rate is fixed, product wise or zone wise",
                        "type": "integer"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "slug",
                      "rate_by",
                      "currency"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "currency": "usd",
                              "rate_by": 3,
                              "slug": "fedex",
                              "status_id": 7
                            }
                          ],
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "rate_by": {
                              "description": "This will decide weather its rate is fixed, product wise or zone wise",
                              "type": "integer"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status_id": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title",
                            "slug",
                            "rate_by",
                            "currency"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual shippingMethod",
        "tags": [
          "Shipping"
        ]
      },
      "summary": "Operations related to a single shippingMethod"
    },
    "/shipping-zones": {
      "get": {
        "description": "",
        "operationId": "shippingZoneList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "city": "newyork",
                                "country": "us",
                                "methods": {
                                  "1": null,
                                  "3": null,
                                  "4": null
                                },
                                "state": "newyork",
                                "title": "Newyork",
                                "zip": 35840
                              }
                            ],
                            "properties": {
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "methods": {
                                "items": {
                                  "type": "integer"
                                },
                                "type": "array"
                              },
                              "state": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "country"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all shipping-zones on system",
        "tags": [
          "Shipping"
        ]
      },
      "post": {
        "description": "",
        "operationId": "shippingZoneCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "city": "newyork",
                    "country": "us",
                    "methods": {
                      "1": null,
                      "3": null,
                      "4": null
                    },
                    "state": "newyork",
                    "title": "Newyork",
                    "zip": 35840
                  }
                ],
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "methods": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "state": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "country"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "city": "newyork",
                          "country": "us",
                          "methods": {
                            "1": null,
                            "3": null,
                            "4": null
                          },
                          "state": "newyork",
                          "title": "Newyork",
                          "zip": 35840
                        }
                      ],
                      "properties": {
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "methods": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "state": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "country"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New ShippingZone",
        "tags": [
          "Shipping"
        ]
      },
      "summary": "Everything related to general shippingZone related calls"
    },
    "/shipping-zones/{shippingZone}": {
      "delete": {
        "description": "",
        "operationId": "shippingZoneDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual shippingZone",
        "tags": [
          "Shipping"
        ]
      },
      "get": {
        "description": "",
        "operationId": "shippingZoneGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "city": "newyork",
                          "country": "us",
                          "methods": {
                            "1": null,
                            "3": null,
                            "4": null
                          },
                          "state": "newyork",
                          "title": "Newyork",
                          "zip": 35840
                        }
                      ],
                      "properties": {
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "methods": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "state": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "country"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual shippingZone",
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the shippingZone model",
          "in": "path",
          "name": "shippingZone",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "shippingZoneUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "city": "newyork",
                    "country": "us",
                    "methods": {
                      "1": null,
                      "3": null,
                      "4": null
                    },
                    "state": "newyork",
                    "title": "Newyork",
                    "zip": 35840
                  }
                ],
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "methods": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "state": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "country"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "city": "newyork",
                          "country": "us",
                          "methods": {
                            "1": null,
                            "3": null,
                            "4": null
                          },
                          "state": "newyork",
                          "title": "Newyork",
                          "zip": 35840
                        }
                      ],
                      "properties": {
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "methods": {
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "state": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "country"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual shippingZone",
        "tags": [
          "Shipping"
        ]
      },
      "summary": "Operations related to a single shippingZone"
    },
    "/sms-notifications": {
      "get": {
        "description": "",
        "operationId": "smsList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "body": "Please check the package now"
                                  }
                                ],
                                "properties": {
                                  "body": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "body"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "hook": "user.created",
                                    "lang": "es",
                                    "slug": "user.created"
                                  }
                                ],
                                "properties": {
                                  "hook": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "hook"
                                ],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all sms-notifications",
        "tags": [
          "Notifier"
        ]
      },
      "post": {
        "description": "",
        "operationId": "smsCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "body": "Please check the package now"
                      }
                    ],
                    "properties": {
                      "body": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "body"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "hook": "user.created",
                        "lang": "es",
                        "slug": "user.created"
                      }
                    ],
                    "properties": {
                      "hook": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New sms-notification",
        "tags": [
          "Notifier"
        ]
      },
      "summary": "All basic calls for the sms-notifications"
    },
    "/sms-notifications/{smsnotification}": {
      "delete": {
        "description": "",
        "operationId": "smsDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual sms-notification",
        "tags": [
          "Notifier"
        ]
      },
      "get": {
        "description": "",
        "operationId": "smsGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual sms-notification",
        "tags": [
          "Notifier"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual sms-notification",
          "in": "path",
          "name": "smsnotification",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "smsUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "body": "Please check the package now"
                      }
                    ],
                    "properties": {
                      "body": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "body"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "hook": "user.created",
                        "lang": "es",
                        "slug": "user.created"
                      }
                    ],
                    "properties": {
                      "hook": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "hook"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "body": "The desired item is deleted",
                              "subject": "Item Deleted"
                            }
                          ],
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "subject",
                            "body"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "hook": "user.created",
                              "lang": "es",
                              "slug": "user.created"
                            }
                          ],
                          "properties": {
                            "hook": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "hook"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "Notifier"
        ]
      },
      "summary": "Operations related to a single sms-notification"
    },
    "/stores": {
      "get": {
        "description": "",
        "operationId": "storeList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "allOf": [
                              {
                                "example": [
                                  {
                                    "description": "Write something to describe",
                                    "lang": "en",
                                    "title": "Some Title"
                                  }
                                ],
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "lang": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ],
                                "type": "object"
                              },
                              {
                                "example": [
                                  {
                                    "extra": {},
                                    "owner": 5,
                                    "slug": "dummy-store",
                                    "status": 1
                                  }
                                ],
                                "properties": {
                                  "extra": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "owner": {
                                    "type": "integer"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "status_id": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "slug",
                                  "owner"
                                ],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "media": {
                                    "items": {
                                      "properties": {
                                        "file": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all stores on system",
        "tags": [
          "Multistore"
        ]
      },
      "post": {
        "description": "",
        "operationId": "storeCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "extra": {},
                        "owner": 5,
                        "slug": "dummy-store",
                        "status": 1
                      }
                    ],
                    "properties": {
                      "extra": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "owner": {
                        "type": "integer"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status_id": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "slug",
                      "owner"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "extra": {},
                              "owner": 5,
                              "slug": "dummy-store",
                              "status": 1
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "owner": {
                              "type": "integer"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status_id": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "slug",
                            "owner"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Store",
        "tags": [
          "Multistore"
        ]
      },
      "summary": "Everything related to general store related calls"
    },
    "/stores/{store}": {
      "delete": {
        "description": "",
        "operationId": "storeDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual store",
        "tags": [
          "Multistore"
        ]
      },
      "get": {
        "description": "",
        "operationId": "storeGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "extra": {},
                              "owner": 5,
                              "slug": "dummy-store",
                              "status": 1
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "owner": {
                              "type": "integer"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status_id": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "slug",
                            "owner"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual store",
        "tags": [
          "Multistore"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of the store model",
          "in": "path",
          "name": "store",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "storeUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "example": [
                      {
                        "description": "Write something to describe",
                        "lang": "en",
                        "title": "Some Title"
                      }
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  },
                  {
                    "example": [
                      {
                        "extra": {},
                        "owner": 5,
                        "slug": "dummy-store",
                        "status": 1
                      }
                    ],
                    "properties": {
                      "extra": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "owner": {
                        "type": "integer"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status_id": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "slug",
                      "owner"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "media": {
                        "items": {
                          "properties": {
                            "file": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "example": [
                            {
                              "description": "Write something to describe",
                              "lang": "en",
                              "title": "Some Title"
                            }
                          ],
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "lang": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "title"
                          ],
                          "type": "object"
                        },
                        {
                          "example": [
                            {
                              "extra": {},
                              "owner": 5,
                              "slug": "dummy-store",
                              "status": 1
                            }
                          ],
                          "properties": {
                            "extra": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "owner": {
                              "type": "integer"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "status_id": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "slug",
                            "owner"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "media": {
                              "items": {
                                "properties": {
                                  "file": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual store",
        "tags": [
          "Multistore"
        ]
      },
      "summary": "Operations related to a single store"
    },
    "/terms": {
      "get": {
        "description": "",
        "operationId": "termsList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "extra": {},
                                "module_name": "base",
                                "parent_id": 0,
                                "slug": "gender",
                                "title": "Gender"
                              }
                            ],
                            "properties": {
                              "extra": {
                                "items": {},
                                "type": "array"
                              },
                              "module_name": {
                                "type": "string"
                              },
                              "parent_id": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "slug"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all terms",
        "tags": [
          "Base"
        ]
      },
      "post": {
        "description": "",
        "operationId": "termCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "extra": {},
                    "module_name": "base",
                    "parent_id": 0,
                    "slug": "gender",
                    "title": "Gender"
                  }
                ],
                "properties": {
                  "extra": {
                    "items": {},
                    "type": "array"
                  },
                  "module_name": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "slug"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "extra": {},
                          "module_name": "base",
                          "parent_id": 0,
                          "slug": "gender",
                          "title": "Gender"
                        }
                      ],
                      "properties": {
                        "extra": {
                          "items": {},
                          "type": "array"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "parent_id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Term",
        "tags": [
          "Base"
        ]
      },
      "summary": "All basic calls to main object URL"
    },
    "/terms/{term}": {
      "delete": {
        "description": "",
        "operationId": "termDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual term",
        "tags": [
          "Base"
        ]
      },
      "get": {
        "description": "",
        "operationId": "termGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "extra": {},
                          "module_name": "base",
                          "parent_id": 0,
                          "slug": "gender",
                          "title": "Gender"
                        }
                      ],
                      "properties": {
                        "extra": {
                          "items": {},
                          "type": "array"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "parent_id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual term",
        "tags": [
          "Base"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID or slug of the term to get",
          "in": "path",
          "name": "term",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "termUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "extra": {},
                    "module_name": "base",
                    "parent_id": 0,
                    "slug": "gender",
                    "title": "Gender"
                  }
                ],
                "properties": {
                  "extra": {
                    "items": {},
                    "type": "array"
                  },
                  "module_name": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "slug"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "extra": {},
                          "module_name": "base",
                          "parent_id": 0,
                          "slug": "gender",
                          "title": "Gender"
                        }
                      ],
                      "properties": {
                        "extra": {
                          "items": {},
                          "type": "array"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "parent_id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual term",
        "tags": [
          "Base"
        ]
      },
      "summary": "Operations related to a single term"
    },
    "/terms/{term}/children": {
      "get": {
        "description": "",
        "operationId": "termChildren",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "extra": {},
                          "module_name": "base",
                          "parent_id": 0,
                          "slug": "gender",
                          "title": "Gender"
                        }
                      ],
                      "properties": {
                        "extra": {
                          "items": {},
                          "type": "array"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "parent_id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get list of children for an individual terms",
        "tags": [
          "Base"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID or slug of the term to get",
          "in": "path",
          "name": "term",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Current page number that needs to be rendered",
          "in": "query",
          "name": "page",
          "required": false,
          "schema": {
            "default": 0,
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          }
        },
        {
          "description": "Maximum number of items to return.",
          "in": "query",
          "name": "limit",
          "required": false,
          "schema": {
            "default": 20,
            "format": "int32",
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          }
        },
        {
          "description": "Explain the sorting mechnism for the API",
          "in": "query",
          "name": "sort",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "summary": "Retreive list of children associated with the term"
    },
    "/translations": {
      "get": {
        "description": "",
        "operationId": "translationsList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "lang": "en",
                                "locked": true,
                                "module_name": "base",
                                "phrase": "Hello World",
                                "slug": "hello.word",
                                "unstable": false
                              }
                            ],
                            "properties": {
                              "lang": {
                                "type": "string"
                              },
                              "locked": {
                                "type": "boolean"
                              },
                              "module_name": {
                                "type": "string"
                              },
                              "phrase": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "unstable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "phrase",
                              "slug",
                              "lang"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get list of all phrase using pagination",
        "tags": [
          "Base"
        ]
      },
      "post": {
        "description": "",
        "operationId": "phraseCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "lang": "en",
                    "locked": true,
                    "module_name": "base",
                    "phrase": "Hello World",
                    "slug": "hello.word",
                    "unstable": false
                  }
                ],
                "properties": {
                  "lang": {
                    "type": "string"
                  },
                  "locked": {
                    "type": "boolean"
                  },
                  "module_name": {
                    "type": "string"
                  },
                  "phrase": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "unstable": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "phrase",
                  "slug",
                  "lang"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "lang": "en",
                          "locked": true,
                          "module_name": "base",
                          "phrase": "Hello World",
                          "slug": "hello.word",
                          "unstable": false
                        }
                      ],
                      "properties": {
                        "lang": {
                          "type": "string"
                        },
                        "locked": {
                          "type": "boolean"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "phrase": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "unstable": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "phrase",
                        "slug",
                        "lang"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New Phrase",
        "tags": [
          "Base"
        ]
      },
      "summary": "Manage language translations under this path"
    },
    "/translations/{phrase}": {
      "delete": {
        "description": "",
        "operationId": "phraseDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual term",
        "tags": [
          "Base"
        ]
      },
      "get": {
        "description": "",
        "operationId": "phraseGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "lang": "en",
                          "locked": true,
                          "module_name": "base",
                          "phrase": "Hello World",
                          "slug": "hello.word",
                          "unstable": false
                        }
                      ],
                      "properties": {
                        "lang": {
                          "type": "string"
                        },
                        "locked": {
                          "type": "boolean"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "phrase": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "unstable": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "phrase",
                        "slug",
                        "lang"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual phrase",
        "tags": [
          "Base"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID or slug of the phrase to get",
          "in": "path",
          "name": "phrase",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "phraseUdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "lang": "en",
                    "locked": true,
                    "module_name": "base",
                    "phrase": "Hello World",
                    "slug": "hello.word",
                    "unstable": false
                  }
                ],
                "properties": {
                  "lang": {
                    "type": "string"
                  },
                  "locked": {
                    "type": "boolean"
                  },
                  "module_name": {
                    "type": "string"
                  },
                  "phrase": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "unstable": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "phrase",
                  "slug",
                  "lang"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "lang": "en",
                          "locked": true,
                          "module_name": "base",
                          "phrase": "Hello World",
                          "slug": "hello.word",
                          "unstable": false
                        }
                      ],
                      "properties": {
                        "lang": {
                          "type": "string"
                        },
                        "locked": {
                          "type": "boolean"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "phrase": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "unstable": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "phrase",
                        "slug",
                        "lang"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual phrase",
        "tags": [
          "Base"
        ]
      },
      "summary": "Operations related to a single phrase"
    },
    "/users": {
      "get": {
        "description": "",
        "operationId": "usersList",
        "parameters": [
          {
            "description": "Current page number that needs to be rendered",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Explain the sorting mechnism for the API",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "links": {
                          "properties": {
                            "first": {
                              "type": "integer"
                            },
                            "last": {
                              "type": "integer"
                            },
                            "next": {
                              "type": "integer"
                            },
                            "prev": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": "integer"
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "example": [
                              {
                                "email": "abc@testing.com",
                                "lang": "en",
                                "password": "testing123",
                                "permissions": [
                                  "create.user",
                                  "create.person"
                                ],
                                "roles": [
                                  "admin"
                                ],
                                "username": "john"
                              }
                            ],
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "lang": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "permissions": {
                                "items": {},
                                "type": "array"
                              },
                              "roles": {
                                "items": {},
                                "type": "array"
                              },
                              "username": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "username",
                              "password",
                              "email"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get List of all users",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "",
        "operationId": "userCreate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "email": "abc@testing.com",
                    "lang": "en",
                    "password": "testing123",
                    "permissions": [
                      "create.user",
                      "create.person"
                    ],
                    "roles": [
                      "admin"
                    ],
                    "username": "john"
                  }
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "permissions": {
                    "items": {},
                    "type": "array"
                  },
                  "roles": {
                    "items": {},
                    "type": "array"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "email": "abc@testing.com",
                          "lang": "en",
                          "password": "testing123",
                          "permissions": [
                            "create.user",
                            "create.person"
                          ],
                          "roles": [
                            "admin"
                          ],
                          "username": "john"
                        }
                      ],
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "lang": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "permissions": {
                          "items": {},
                          "type": "array"
                        },
                        "roles": {
                          "items": {},
                          "type": "array"
                        },
                        "username": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "username",
                        "password",
                        "email"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Create New User",
        "tags": [
          "User"
        ]
      },
      "summary": "All basic calls for the users"
    },
    "/users/{user}": {
      "delete": {
        "description": "",
        "operationId": "userDelete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Requested Item has been deleted successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Delete an individual user",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "",
        "operationId": "userGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "email": "abc@testing.com",
                          "lang": "en",
                          "password": "testing123",
                          "permissions": [
                            "create.user",
                            "create.person"
                          ],
                          "roles": [
                            "admin"
                          ],
                          "username": "john"
                        }
                      ],
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "lang": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "permissions": {
                          "items": {},
                          "type": "array"
                        },
                        "roles": {
                          "items": {},
                          "type": "array"
                        },
                        "username": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "username",
                        "password",
                        "email"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Get An individual user",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "description": "Numeric ID of an individual user",
          "in": "path",
          "name": "user",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "patch": {
        "description": "",
        "operationId": "userUpdate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "example": [
                  {
                    "email": "abc@testing.com",
                    "lang": "en",
                    "password": "testing123",
                    "permissions": [
                      "create.user",
                      "create.person"
                    ],
                    "roles": [
                      "admin"
                    ],
                    "username": "john"
                  }
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "permissions": {
                    "items": {},
                    "type": "array"
                  },
                  "roles": {
                    "items": {},
                    "type": "array"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": [
                        {
                          "extra": {},
                          "module_name": "base",
                          "parent_id": 0,
                          "slug": "gender",
                          "title": "Gender"
                        }
                      ],
                      "properties": {
                        "extra": {
                          "items": {},
                          "type": "array"
                        },
                        "module_name": {
                          "type": "string"
                        },
                        "parent_id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "slug"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A user with the specified ID was not found."
          },
          "5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unexpected error."
          }
        },
        "summary": "Update an individual user",
        "tags": [
          "User"
        ]
      },
      "summary": "Operations related to a single user"
    }
  },
  "servers": [
    {
      "description": "White falcon's live Laravel test URL",
      "url": "{protocol}://{host}/api/v1",
      "variables": {
        "host": {
          "default": "whf.gotomy.dev"
        },
        "protocol": {
          "default": "https",
          "enum": [
            "http",
            "https"
          ]
        }
      }
    },
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/EvenLogics/white-falcon/1.0.0"
    }
  ],
  "tags": [
    {
      "description": "All Items for Base module will fall under this section",
      "name": "Base"
    },
    {
      "description": "Users and authentication related operations are part of this moudle",
      "name": "User"
    },
    {
      "description": "Entity module is dealing with people, addresses and companies",
      "name": "Entity"
    },
    {
      "description": "This module is responsible for any kind of communication within or outside the system. E.g Email, SMS, push notifications etc",
      "name": "Notification"
    },
    {
      "description": "The responsibillity of this module is to offer eCommerce capabillity in our ecosystem",
      "name": "Ecommerce"
    },
    {
      "description": "This module can be used individually or as part of eCommerce module system.",
      "name": "Product"
    },
    {
      "description": "This module will be responsbile for providing all functionality related to the pages and general CMS",
      "name": "Cms"
    },
    {
      "description": "This module is responsible for managing everything related to a customer",
      "name": "Customer"
    },
    {
      "description": "A module responsible for managing everything related to the payments",
      "name": "Payment"
    },
    {
      "description": "A module for creating and managing classified ads",
      "name": "Classified"
    },
    {
      "description": "This module is going to manage all moderations in the system",
      "name": "Moderation"
    },
    {
      "description": "This module is an extension for products to avail form generator's functionality",
      "name": "ProductAttributes"
    },
    {
      "description": "Multistore module is an extension of eCommerce and this will allow to have multivendor or multistore concept introduced",
      "name": "Multistore"
    },
    {
      "description": "All shipping matters of the system should be managed through this module",
      "name": "Shipping"
    }
  ]
}